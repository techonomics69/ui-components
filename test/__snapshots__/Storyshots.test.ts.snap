// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Accordion Accordion - Caret Left 1`] = `
<div
  className="accordion-wrapper accordion-caret-left"
>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Accordion Accordion - Editor 1`] = `
<div
  className="accordion-wrapper accordion-caret-left is-editor"
>
  <div
    className="accordion-panel is-visible"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h4>
        Add Modules
      </h4>
    </div>
    <div
      aria-hidden={false}
      className="rah-static rah-static--height-auto"
      style={
        Object {
          "height": "auto",
          "overflow": "visible",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-images"
                  onClick={undefined}
                  style={null}
                />
                Image
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-image-text"
                  onClick={undefined}
                  style={null}
                />
                Image & Text
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-text"
                  onClick={undefined}
                  style={null}
                />
                Text
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-code"
                  onClick={undefined}
                  style={null}
                />
                Code
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-columns"
                  onClick={undefined}
                  style={null}
                />
                Columns
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-button"
                  onClick={undefined}
                  style={null}
                />
                Button
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-divider"
                  onClick={undefined}
                  style={null}
                />
                Divider
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-spacer"
                  onClick={undefined}
                  style={null}
                />
                Spacer
              </p>
            </div>
            <div
              className="card is-centered is-module"
            >
              <p>
                <i
                  className="sg-icon sg-icon-social"
                  onClick={undefined}
                  style={null}
                />
                Social
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Accordion Accordion - Large 1`] = `
<div
  className="accordion-wrapper accordion-large"
>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <i
        className="accordion-icon sg-icon sg-icon-teammate"
        onClick={undefined}
        style={null}
      />
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion title with icon and intro text
      </h2>
      <p
        className={undefined}
        style={undefined}
      >
        Accordion title description.
      </p>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion with no icon/text
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Accordion Accordion - Nested 1`] = `
<div
  className="accordion-wrapper"
>
  <div
    className="accordion-panel has-child is-visible"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Primary Accordion Title 1
      </h2>
    </div>
    <div
      aria-hidden={false}
      className="rah-static rah-static--height-auto"
      style={
        Object {
          "height": "auto",
          "overflow": "visible",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <div
            className="accordion-wrapper"
          >
            <div
              className="accordion-panel"
            >
              <div
                className="accordion-title"
                onClick={[Function]}
              >
                <h3>
                  Secondary Accordion Title 1
                </h3>
              </div>
              <div
                aria-hidden={true}
                className="rah-static rah-static--height-zero"
                style={
                  Object {
                    "height": 0,
                    "overflow": "hidden",
                  }
                }
              >
                <div
                  className={undefined}
                  style={Object {}}
                >
                  <div
                    className="accordion-content"
                    style={
                      Object {
                        "display": "block",
                      }
                    }
                  >
                    <p>
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
                    </p>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="accordion-panel"
            >
              <div
                className="accordion-title"
                onClick={[Function]}
              >
                <h3>
                  Secondary Accordion Title 2
                </h3>
              </div>
              <div
                aria-hidden={true}
                className="rah-static rah-static--height-zero"
                style={
                  Object {
                    "height": 0,
                    "overflow": "hidden",
                  }
                }
              >
                <div
                  className={undefined}
                  style={Object {}}
                >
                  <div
                    className="accordion-content"
                    style={
                      Object {
                        "display": "block",
                      }
                    }
                  >
                    <p>
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Primary Accordion Title 2
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Accordion Accordion - Nested with checkbox 1`] = `
<div
  className="accordion-wrapper"
>
  <div
    className="accordion-panel is-visible"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Fields
      </h2>
    </div>
    <div
      aria-hidden={false}
      className="rah-static rah-static--height-auto"
      style={
        Object {
          "height": "auto",
          "overflow": "visible",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <div
            className="accordion-wrapper"
          >
            <div
              className="accordion-panel"
            >
              <div
                className="accordion-title"
                onClick={[Function]}
              >
                <div
                  className="input-checkbox-wrap"
                >
                  <input
                    checked={true}
                    disabled={undefined}
                    id="accordion-checkbox-example"
                    onChange={[Function]}
                    type="checkbox"
                    value={undefined}
                  />
                  <label
                    className="input-checkbox-label"
                    htmlFor="accordion-checkbox-example"
                  >
                    First Name
                  </label>
                </div>
              </div>
              <div
                aria-hidden={true}
                className="rah-static rah-static--height-zero"
                style={
                  Object {
                    "height": 0,
                    "overflow": "hidden",
                  }
                }
              >
                <div
                  className={undefined}
                  style={Object {}}
                >
                  <div
                    className="accordion-content"
                    style={
                      Object {
                        "display": "block",
                      }
                    }
                  >
                    <p>
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Accordion Accordion - Standard 1`] = `
<div
  className="accordion-wrapper"
>
  <div
    className="accordion-panel is-visible"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={false}
      className="rah-static rah-static--height-auto"
      style={
        Object {
          "height": "auto",
          "overflow": "visible",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
  <div
    className="accordion-panel"
  >
    <div
      className="accordion-title"
      onClick={[Function]}
    >
      <h2
        className={undefined}
        style={undefined}
      >
        Accordion Title
      </h2>
    </div>
    <div
      aria-hidden={true}
      className="rah-static rah-static--height-zero"
      style={
        Object {
          "height": 0,
          "overflow": "hidden",
        }
      }
    >
      <div
        className={undefined}
        style={Object {}}
      >
        <div
          className="accordion-content"
          style={
            Object {
              "display": "block",
            }
          }
        >
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  Vestibulum vehicula semper eleifend. Morbi tincidunt, magna non hendrerit malesuada,
  ex est pulvinar nisi, ac luctus lorem quam vel nibh. Integer at tortor luctus
  dui egestas consequat. Donec ut nibh lorem. Phasellus sed sapien lobortis,
  egestas lacus nec, vehicula lorem. Donec hendrerit nibh sed velit placerat
  aliquet. Morbi tristique pretium lorem, nec pretium turpis mattis vel.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Alerts Alert which is not dismissable 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Changes you've made to this email have not been applied to your live automation.
    <button
      className="btn btn-primary btn-small"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Save and Apply
    </button>
  </p>
</div>
`;

exports[`Storyshots Alerts Danger Alert 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Danger Alert with Custom Icon 1`] = `
<div
  className="alert alert-danger"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-check-circle"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Success Alert with Custom Icon 1`] = `
<div
  className="alert alert-success"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-warning"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Alerts Warning Alert with Custom Icon 1`] = `
<div
  className="alert alert-warning"
  role="alert"
>
  <p>
    <i
      className="sg-icon sg-icon-clean-ui"
      onClick={undefined}
      style={null}
    />
    Lorem ipsum dolor sit amet, 
    <a
      href="#"
    >
      consectetur adipiscing elit
    </a>
    . In nec augue eu lacus aliquam lobortis.
    <i
      className="sg-icon sg-icon-x"
      onClick={[Function]}
      style={null}
    />
  </p>
</div>
`;

exports[`Storyshots Badge All Badges 1`] = `
Array [
  <span
    className="badge sg-blue"
  >
    sg-blue
  </span>,
  <br />,
  <span
    className="badge slate"
  >
    slate
  </span>,
  <br />,
  <span
    className="badge ron-burgundy"
  >
    ron-burgundy
  </span>,
  <br />,
  <span
    className="badge burnt-orange"
  >
    burnt-orange
  </span>,
  <br />,
  <span
    className="badge carrot"
  >
    carrot
  </span>,
  <br />,
  <span
    className="badge mango"
  >
    mango
  </span>,
  <br />,
  <span
    className="badge mantis"
  >
    mantis
  </span>,
  <br />,
  <span
    className="badge spruce"
  >
    spruce
  </span>,
  <br />,
  <span
    className="badge grass-stain"
  >
    grass-stain
  </span>,
  <br />,
  <span
    className="badge lime"
  >
    lime
  </span>,
  <br />,
  <span
    className="badge cobalt"
  >
    cobalt
  </span>,
  <br />,
  <span
    className="badge bluebird"
  >
    bluebird
  </span>,
  <br />,
  <span
    className="badge seafoam"
  >
    seafoam
  </span>,
  <br />,
  <span
    className="badge caribbean"
  >
    caribbean
  </span>,
  <br />,
  <span
    className="badge crown"
  >
    crown
  </span>,
  <br />,
  <span
    className="badge screample"
  >
    screample
  </span>,
  <br />,
  <span
    className="badge sangria"
  >
    sangria
  </span>,
  <br />,
  <span
    className="badge lavender"
  >
    lavender
  </span>,
  <br />,
  <span
    className="badge wild-strawberry"
  >
    wild-strawberry
  </span>,
  <br />,
  <span
    className="badge steel"
  >
    steel
  </span>,
  <br />,
]
`;

exports[`Storyshots Badge Badge with custom classname 1`] = `
<span
  className="badge custom-class"
>
  custom
</span>
`;

exports[`Storyshots Banner Message Banner Messages 1`] = `
Array [
  <div
    className="banner-message banner-message-info"
  >
    Hello, this is an info banner Message
  </div>,
  <br />,
  <br />,
  <div
    className="banner-message banner-message-beta"
  >
    Beta banner with 
    <strong>
      some jsx
    </strong>
  </div>,
]
`;

exports[`Storyshots Breadcrumb Breadcrumb with single item 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb with two items 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
  <li>
    <a
      href="#"
    >
      Upload CSV
    </a>
  </li>
  <li />
</ol>
`;

exports[`Storyshots Breadcrumb Breadcrumb without trailing slash 1`] = `
<ol
  className="breadcrumb"
>
  <li>
    <a
      href="#"
    >
      Contacts
    </a>
  </li>
</ol>
`;

exports[`Storyshots Button Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Danger Button 1`] = `
<button
  className="btn btn-danger"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Badge 1`] = `
<button
  className="btn btn-danger has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Danger Button with Icon and Data Attr 1`] = `
<button
  className="btn btn-danger has-icon"
  data-role="test-role"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Link Anchor Button Link 1`] = `
<a
  className="btn btn-primary"
  href="#"
  id={undefined}
  onClick={[Function]}
>
  This is an anchor
</a>
`;

exports[`Storyshots Button Link Div Button Link 1`] = `
<div
  className="btn btn-primary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Danger Button Link 1`] = `
<div
  className="btn btn-danger has-icon"
  id={undefined}
  onClick={[Function]}
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  This is a div
</div>
`;

exports[`Storyshots Button Link Div Secondary Button Link 1`] = `
<div
  className="btn btn-secondary"
  id={undefined}
  onClick={[Function]}
>
  This is a div
</div>
`;

exports[`Storyshots Button List Button List on a Dark Background 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary btn-on-dark"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Primary
    </button>
    <button
      className="btn btn-secondary btn-on-dark"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Secondary
    </button>
    <button
      className="btn btn-secondary btn-on-dark is-disabled"
      disabled={true}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Disabled
    </button>
  </div>
</div>
`;

exports[`Storyshots Button List Button List on a Light Background 1`] = `
<div
  className="btn-list"
>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Primary
  </button>
  <button
    className="btn btn-secondary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Secondary
  </button>
  <button
    className="btn btn-danger"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Danger
  </button>
</div>
`;

exports[`Storyshots Button Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Primary Button (Loading) [animation] 1`] = `
<button
  className="btn btn-primary has-icon is-loading"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Primary Button 1`] = `
<button
  className="btn btn-primary"
  disabled={false}
  id="stui-test-locator-abc"
  onClick={[Function]}
  type="button"
>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Badge 1`] = `
<button
  className="btn btn-primary has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Primary Button with Icon 1`] = `
<button
  className="btn btn-primary has-icon"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Secondary Button (Loading) [animation] 1`] = `
<button
  className="btn btn-secondary has-icon is-loading"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Secondary Button 1`] = `
<button
  className="btn btn-secondary"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Secondary Submit Button with Icon 1`] = `
<button
  className="btn btn-secondary has-icon"
  disabled={false}
  id={undefined}
  isSubmit={true}
  onClick={[Function]}
  type="submit"
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots Button Small Danger Button (Disabled) 1`] = `
<button
  className="btn btn-danger btn-small is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Danger (Disabled)
</button>
`;

exports[`Storyshots Button Small Danger Button 1`] = `
<button
  className="btn btn-danger btn-small"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Badge 1`] = `
<button
  className="btn btn-danger btn-small has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Danger
</button>
`;

exports[`Storyshots Button Small Danger Button with Icon 1`] = `
<button
  className="btn btn-danger btn-small has-icon"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <i
    className="sg-icon sg-icon-trash"
    onClick={undefined}
    style={null}
  />
  Danger
</button>
`;

exports[`Storyshots Button Small Primary Button  [animation] 1`] = `
<button
  className="btn btn-primary btn-small has-icon is-loading"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Primary (Loading)
</button>
`;

exports[`Storyshots Button Small Primary Button (Disabled) 1`] = `
<button
  className="btn btn-primary btn-small is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Primary (Disabled)
</button>
`;

exports[`Storyshots Button Small Primary Button 1`] = `
<button
  className="btn btn-primary btn-small"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Badge 1`] = `
<button
  className="btn btn-primary btn-small has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Primary
</button>
`;

exports[`Storyshots Button Small Primary Button with Icon 1`] = `
<button
  className="btn btn-primary btn-small has-icon"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <i
    className="sg-icon sg-icon-create"
    onClick={undefined}
    style={null}
  />
  Primary
</button>
`;

exports[`Storyshots Button Small Secondary Button (Disabled) 1`] = `
<button
  className="btn btn-secondary btn-small is-disabled"
  disabled={true}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Secondary (Disabled)
</button>
`;

exports[`Storyshots Button Small Secondary Button (Loading) [animation] 1`] = `
<button
  className="btn btn-secondary btn-small has-icon is-loading"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  Secondary (Loading)
</button>
`;

exports[`Storyshots Button Small Secondary Button 1`] = `
<button
  className="btn btn-secondary btn-small"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Badge 1`] = `
<button
  className="btn btn-secondary btn-small has-badge"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <span
    className="badge"
  >
    1
  </span>
  Secondary
</button>
`;

exports[`Storyshots Button Small Secondary Button with Icon 1`] = `
<button
  className="btn btn-secondary btn-small has-icon"
  disabled={false}
  id={undefined}
  onClick={[Function]}
  type="button"
>
  <i
    className="sg-icon sg-icon-copy"
    onClick={undefined}
    style={null}
  />
  Secondary
</button>
`;

exports[`Storyshots CSV Upload Basic CSV Upload 1`] = `
<section
  onDragEnd={[Function]}
  onDragLeave={[Function]}
  onDragOver={[Function]}
  onDrop={[Function]}
>
  <section
    className="dropzone"
    onDragEnd={undefined}
    onDragLeave={undefined}
    onDragOver={undefined}
    onDrop={undefined}
    role="hidden"
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexWrap": "wrap",
        "fontSize": "14px",
        "justifyContent": "center",
      }
    }
  >
    <div
      style={Object {}}
    >
      <div
        className={undefined}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
          }
        }
      >
        <i
          className="sg-icon sg-icon-csv is-size-30"
          onClick={undefined}
          style={
            Object {
              "marginRight": "12px",
            }
          }
        />
        <span>
          Drag and drop your CSV file here or
           
          <a
            href="#"
            onClick={[Function]}
          >
            select a CSV file to upload
          </a>
          .
        </span>
      </div>
    </div>
  </section>
  <input
    accept="text/csv"
    onChange={[Function]}
    style={
      Object {
        "display": "none",
      }
    }
    type="file"
  />
</section>
`;

exports[`Storyshots Card Card (Inline) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-inline"
    >
      <h2
        className="card-title"
      >
        Node.js
      </h2>
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card (Inline, Thin) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-inline is-thin"
    >
      <h2
        className="card-title"
      >
        Node.js
      </h2>
      <button
        className="btn btn-secondary btn-small"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card (Large) 1`] = `
<div
  className="row"
>
  <div
    className="col-8"
    style={
      Object {
        "width": "800px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <div
        className="card-icon"
      >
        <i
          className="sg-icon sg-icon-airplane is-size-40"
          onClick={undefined}
          style={null}
        />
      </div>
      <h2
        className=""
      >
        Large & In-Charge
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card w/Actions (Vertical) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Event Annoucements
      </h2>
      <p>
        Hear about our latest events and when we're coming to a city near you.
      </p>
      <div
        className="actions"
      >
        <div
          className="btn-list"
        >
          <div
            className="btn btn-dropdown dropdown has-icon"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-ellipsis-vertical"
              onClick={undefined}
              style={null}
            />
            <ul
              className="dropdown-menu"
            >
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-pencil"
                  onClick={undefined}
                  style={null}
                />
                Edit
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-view"
                  onClick={undefined}
                  style={null}
                />
                Preview
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-export"
                  onClick={undefined}
                  style={null}
                />
                Export
              </span>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Badge 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <span
        className="badge mantis"
      >
        Recommended
      </span>
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Icon (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <div
        className="card-icon"
      >
        <i
          className="sg-icon sg-icon-locked is-size-30"
          onClick={undefined}
          style={null}
        />
      </div>
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (Centered) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (Selected) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-selected"
    >
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body (with Custom Children, Centered, Selected) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered is-selected"
    >
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Choose
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with Title and Body 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        SMTP Relay
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Card Card with falsy actions and link actions 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Event Annoucements
      </h2>
      <p>
        Hear about our latest events and when we're coming to a city near you.
      </p>
      <div
        className="actions"
      >
        <div
          className="btn-list"
        >
          <div
            className="btn btn-dropdown dropdown has-icon"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-ellipsis-vertical"
              onClick={undefined}
              style={null}
            />
            <ul
              className="dropdown-menu"
            >
              <a
                className="dropdown-link"
                href="javascript: void 0"
              >
                <span
                  onClick={[Function]}
                >
                  <i
                    className="sg-icon sg-icon-pencil"
                    onClick={undefined}
                    style={null}
                  />
                  Edit
                </span>
              </a>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots CenterModal CenterModal with footer and header, no x 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="center-modal has-padding is-visible"
    data-role="example"
  >
    <h2>
      Scorpion XING Zone 🦂
    </h2>
    <p>
      Please do not feed the scorpions. Doing so could result in scorpion wounds, fines of up to $2,500 and up to 5 years of community service.
    </p>
    <div
      className="modal-footer"
    >
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
  <div
    className="modal-mask is-visible"
    onClick={[Function]}
  />
</div>
`;

exports[`Storyshots CenterModal CenterModal with footer and header, no x, large 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="center-modal has-padding is-large is-visible"
    data-role="example"
  >
    <h2>
      Scorpion XING Zone 🦂
    </h2>
    <p>
      Please do not feed the scorpions. Doing so could result in scorpion wounds, fines of up to $2,500 and up to 5 years of community service.
    </p>
    <div
      className="modal-footer"
    >
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
  <div
    className="modal-mask is-visible"
    onClick={[Function]}
  />
</div>
`;

exports[`Storyshots CenterModal CenterModal without footer or header, with x 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="center-modal has-padding is-visible"
    data-role="example"
  >
    <i
      className="sg-icon sg-icon-x"
      data-role="close-center-modal"
      onClick={[Function]}
      style={null}
    />
    <p>
      Please do not feed the scorpions. Doing so could result in scorpion wounds, fines of up to $2,500 and up to 5 years of community service.
    </p>
  </div>
  <div
    className="modal-mask is-visible"
    onClick={[Function]}
  />
</div>
`;

exports[`Storyshots Checkbox Disabled Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    checked={false}
    disabled={true}
    id="disabled-checkbox"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
  <label
    className="input-checkbox-label"
    htmlFor="disabled-checkbox"
  >
    Marketing
  </label>
</div>
`;

exports[`Storyshots Checkbox Standard Checkbox 1`] = `
<div
  className="input-checkbox-wrap"
>
  <input
    checked={false}
    disabled={undefined}
    id="standard-checkbox"
    onChange={[Function]}
    type="checkbox"
    value={undefined}
  />
  <label
    className="input-checkbox-label"
    htmlFor="standard-checkbox"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Color Palette Bare 1`] = `
<div
  className="dismissable-background"
  onClick={[Function]}
>
  <div
    className="color-palette"
    style={
      Object {
        "left": 0,
        "top": 0,
      }
    }
  >
    <div
      className="saturation"
    >
      <div
        onMouseDown={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "MozBorderRadius": undefined,
            "OBorderRadius": undefined,
            "WebkitBorderRadius": undefined,
            "background": "hsl(249.99999999999994,100%, 50%)",
            "borderRadius": undefined,
            "bottom": "0px",
            "left": "0px",
            "msBorderRadius": undefined,
            "position": "absolute",
            "right": "0px",
            "top": "0px",
          }
        }
      >
        <style>
          
          .saturation-white {
            background: -webkit-linear-gradient(to right, #fff, rgba(255,255,255,0));
            background: linear-gradient(to right, #fff, rgba(255,255,255,0));
          }
          .saturation-black {
            background: -webkit-linear-gradient(to top, #000, rgba(0,0,0,0));
            background: linear-gradient(to top, #000, rgba(0,0,0,0));
          }
        
        </style>
        <div
          className="saturation-white"
          style={
            Object {
              "MozBorderRadius": undefined,
              "OBorderRadius": undefined,
              "WebkitBorderRadius": undefined,
              "borderRadius": undefined,
              "bottom": "0px",
              "left": "0px",
              "msBorderRadius": undefined,
              "position": "absolute",
              "right": "0px",
              "top": "0px",
            }
          }
        >
          <div
            className="saturation-black"
            style={
              Object {
                "MozBorderRadius": undefined,
                "MozBoxShadow": undefined,
                "OBorderRadius": undefined,
                "OBoxShadow": undefined,
                "WebkitBorderRadius": undefined,
                "WebkitBoxShadow": undefined,
                "borderRadius": undefined,
                "bottom": "0px",
                "boxShadow": undefined,
                "left": "0px",
                "msBorderRadius": undefined,
                "msBoxShadow": undefined,
                "position": "absolute",
                "right": "0px",
                "top": "0px",
              }
            }
          />
          <div
            style={
              Object {
                "cursor": "default",
                "left": "66.66666666666667%",
                "position": "absolute",
                "top": "70%",
              }
            }
          >
            <div
              style={
                Object {
                  "MozBorderRadius": "50%",
                  "MozBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                  "MozTransform": "translate(-2px, -2px)",
                  "OBorderRadius": "50%",
                  "OBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                  "OTransform": "translate(-2px, -2px)",
                  "WebkitBorderRadius": "50%",
                  "WebkitBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                  "WebkitTransform": "translate(-2px, -2px)",
                  "borderRadius": "50%",
                  "boxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                  "cursor": "hand",
                  "height": "4px",
                  "msBorderRadius": "50%",
                  "msBoxShadow": "0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3),
            0 0 1px 2px rgba(0,0,0,.4)",
                  "msTransform": "translate(-2px, -2px)",
                  "transform": "translate(-2px, -2px)",
                  "width": "4px",
                }
              }
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="hue"
    >
      <div
        style={
          Object {
            "MozBorderRadius": undefined,
            "MozBoxShadow": undefined,
            "OBorderRadius": undefined,
            "OBoxShadow": undefined,
            "WebkitBorderRadius": undefined,
            "WebkitBoxShadow": undefined,
            "borderRadius": undefined,
            "bottom": "0px",
            "boxShadow": undefined,
            "left": "0px",
            "msBorderRadius": undefined,
            "msBoxShadow": undefined,
            "position": "absolute",
            "right": "0px",
            "top": "0px",
          }
        }
      >
        <div
          className="hue-horizontal"
          onMouseDown={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          style={
            Object {
              "MozBorderRadius": undefined,
              "OBorderRadius": undefined,
              "WebkitBorderRadius": undefined,
              "borderRadius": undefined,
              "height": "100%",
              "msBorderRadius": undefined,
              "padding": "0 2px",
              "position": "relative",
            }
          }
        >
          <style>
            
            .hue-horizontal {
              background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0
                33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to right, #f00 0%, #ff0
                17%, #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }

            .hue-vertical {
              background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,
                #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
              background: -webkit-linear-gradient(to top, #f00 0%, #ff0 17%,
                #0f0 33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);
            }
          
          </style>
          <div
            style={
              Object {
                "left": "69.44444444444443%",
                "position": "absolute",
              }
            }
          >
            <div
              style={
                Object {
                  "MozBorderRadius": "1px",
                  "MozBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                  "MozTransform": "translateX(-2px)",
                  "OBorderRadius": "1px",
                  "OBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                  "OTransform": "translateX(-2px)",
                  "WebkitBorderRadius": "1px",
                  "WebkitBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                  "WebkitTransform": "translateX(-2px)",
                  "background": "#fff",
                  "borderRadius": "1px",
                  "boxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                  "height": "8px",
                  "marginTop": "1px",
                  "msBorderRadius": "1px",
                  "msBoxShadow": "0 0 2px rgba(0, 0, 0, .6)",
                  "msTransform": "translateX(-2px)",
                  "transform": "translateX(-2px)",
                  "width": "4px",
                }
              }
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="ColorPalette-controls controls"
    >
      <article
        className="color-swatch current-color-swatch"
        onClick={[Function]}
        style={
          Object {
            "background": "#22194d",
          }
        }
      />
      <div
        className="HexColorControl hex-color-control"
      >
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <input
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            placeholder={undefined}
            spellCheck="false"
            style={Object {}}
            value="#22194D"
          />
          <span
            onMouseDown={[Function]}
            style={Object {}}
          >
            hex
          </span>
        </div>
      </div>
      <div
        className="RGBCColorControls rgb-color-controls"
      >
        <div
          className="rgb-color-control"
        >
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder={undefined}
              spellCheck="false"
              style={Object {}}
              value="34"
            />
            <span
              onMouseDown={[Function]}
              style={Object {}}
            >
              r
            </span>
          </div>
        </div>
        <div
          className="rgb-color-control"
        >
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder={undefined}
              spellCheck="false"
              style={Object {}}
              value="25"
            />
            <span
              onMouseDown={[Function]}
              style={Object {}}
            >
              g
            </span>
          </div>
        </div>
        <div
          className="rgb-color-control"
        >
          <div
            style={
              Object {
                "position": "relative",
              }
            }
          >
            <input
              onBlur={[Function]}
              onChange={[Function]}
              onKeyDown={[Function]}
              placeholder={undefined}
              spellCheck="false"
              style={Object {}}
              value="77"
            />
            <span
              onMouseDown={[Function]}
              style={Object {}}
            >
              b
            </span>
          </div>
        </div>
      </div>
    </div>
    <section
      className="SavedColorList saved-color-list"
    >
      <button
        className="add-color-button"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-plus"
          onClick={undefined}
          style={null}
        />
      </button>
    </section>
  </div>
</div>
`;

exports[`Storyshots Color Palette Color Picker 1`] = `
<div
  className="picker-wrapper"
>
  <label />
  <div
    className="inputs-wrapper"
  >
    <i
      className="reset-button sg-icon sg-icon-reload"
      data-role="reset-button"
      onClick={[Function]}
      style={null}
      title="Reset to Default Color"
    />
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-color"
      >
        
      </label>
      <input
        aria-describedby=""
        data-role="color-value"
        id="test-color"
        name="color-story"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="auto"
        step={undefined}
        type="text"
        value=""
      />
      
      
    </div>
    <button
      className="bubble"
      data-role="color-picker-trigger"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "",
        }
      }
    />
  </div>
  <div
    className="cp-default"
    role="color-picker-container"
  />
</div>
`;

exports[`Storyshots Color Palette Text Disabled 1`] = `
<div
  className="picker-wrapper text-disabled"
>
  <label />
  <div
    className="inputs-wrapper"
  >
    <i
      className="reset-button sg-icon sg-icon-reload"
      data-role="reset-button"
      onClick={[Function]}
      style={null}
      title="Reset to Default Color"
    />
    <div
      className="input-text-wrap is-disabled"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-color"
      >
        
      </label>
      <input
        aria-describedby=""
        data-role="color-value"
        id="test-color"
        name="color-story"
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="auto"
        step={undefined}
        textDisabled={true}
        type="text"
        value=""
      />
      
      
    </div>
    <button
      className="bubble"
      data-role="color-picker-trigger"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "",
        }
      }
    />
  </div>
  <div
    className="cp-default"
    role="color-picker-container"
  />
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with icon 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="sg-modal is-visible"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header conf-alert-header-with-icon"
      >
        <i
          className="sg-icon sg-icon-trash"
          onClick={undefined}
          style={null}
        />
        Very cool! 😍
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          This will make a thing happen.
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots ConfirmationModal ConfirmationModal with plain contents 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="sg-modal is-visible"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        Very cool! 😍
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          This will make a thing happen.
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-primary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Confirm
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Counter Counter 1`] = `
<div
  className="counter"
>
  Credits
  <span
    className="counter-bubble"
  >
    1000
  </span>
</div>
`;

exports[`Storyshots Divider Divider (Thin) 1`] = `
<hr
  className="is-thin"
  data-label={null}
/>
`;

exports[`Storyshots Divider Divider (with Label) 1`] = `
<hr
  className="has-label"
  data-label="Very Important"
/>
`;

exports[`Storyshots Divider Divider 1`] = `
<hr
  className=""
  data-label={null}
/>
`;

exports[`Storyshots Drag & Drop Module Cards All 1`] = `
<div
  style={
    Object {
      "width": "400px",
    }
  }
>
  <style>
    
        .is-module { 
          margin: 0 10px 10px 0;
          display: inline-flex;
        }
      
  </style>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-button"
        onClick={undefined}
        style={null}
      />
      Button
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-code"
        onClick={undefined}
        style={null}
      />
      Code
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-columns"
        onClick={undefined}
        style={null}
      />
      Columns
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-divider"
        onClick={undefined}
        style={null}
      />
      Divider
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-images"
        onClick={undefined}
        style={null}
      />
      Image
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-image-text"
        onClick={undefined}
        style={null}
      />
      Image & Text
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-social"
        onClick={undefined}
        style={null}
      />
      Social
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-spacer"
        onClick={undefined}
        style={null}
      />
      Spacer
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-text"
        onClick={undefined}
        style={null}
      />
      Text
    </p>
  </div>
  <div
    className="card is-module is-centered is-thin"
  >
    <p>
      <i
        className="sg-icon sg-icon-unsubscribe"
        onClick={undefined}
        style={null}
      />
      Unsubscribe
    </p>
  </div>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Button Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-button"
      onClick={undefined}
      style={null}
    />
    Button
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Code Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-code"
      onClick={undefined}
      style={null}
    />
    Code
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Columns Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-columns"
      onClick={undefined}
      style={null}
    />
    Columns
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Divider Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-divider"
      onClick={undefined}
      style={null}
    />
    Divider
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Image & Text Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-image-text"
      onClick={undefined}
      style={null}
    />
    Image & Text
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Image Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-images"
      onClick={undefined}
      style={null}
    />
    Image
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Social Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-social"
      onClick={undefined}
      style={null}
    />
    Social
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Spacer Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-spacer"
      onClick={undefined}
      style={null}
    />
    Spacer
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Text Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-text"
      onClick={undefined}
      style={null}
    />
    Text
  </p>
</div>
`;

exports[`Storyshots Drag & Drop Module Cards Unsubscribe Module 1`] = `
<div
  className="card is-module is-centered is-thin"
>
  <p>
    <i
      className="sg-icon sg-icon-unsubscribe"
      onClick={undefined}
      style={null}
    />
    Unsubscribe
  </p>
</div>
`;

exports[`Storyshots Dropdown Button Gear Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-dropdown-gear"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-gear"
      onClick={undefined}
      style={null}
    />
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      1
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Primary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-primary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={
        Object {
          "color": "white",
        }
      }
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary"
    onClick={[Function]}
  >
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Badge 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-badge"
    onClick={[Function]}
  >
    <span
      className="badge"
    >
      2
    </span>
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon (Small) 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary btn-small has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button Secondary Dropdown with Icon 1`] = `
<div
  className="btn-list"
>
  <div
    className="btn btn-dropdown dropdown btn-secondary has-icon"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-create"
      onClick={undefined}
      style={null}
    />
    Button
    <ul
      className="dropdown-menu"
    >
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Sender
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new IP
      </a>
      <a
        className="dropdown-link"
        href="#"
      >
        Add new Template
      </a>
    </ul>
  </div>
</div>
`;

exports[`Storyshots Dropdown Button With menu positioned to the left 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "justifyContent": "flex-end",
    }
  }
>
  <div
    className="btn-list"
  >
    <div
      className="btn btn-dropdown dropdown btn-dropdown-gear is-left"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-gear"
        onClick={undefined}
        style={null}
      />
      <ul
        className="dropdown-menu"
      >
        <a
          className="dropdown-link"
          href="#"
        >
          Add new Sender
        </a>
        <a
          className="dropdown-link"
          href="#"
        >
          Add new IP
        </a>
        <a
          className="dropdown-link"
          href="#"
        >
          Add new Template
        </a>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Dropzone Dropzone (Active) 1`] = `
<section
  className="dropzone is-active"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  />
</section>
`;

exports[`Storyshots Dropzone Dropzone (Hovered) 1`] = `
<section
  className="dropzone is-hovered"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  />
</section>
`;

exports[`Storyshots Dropzone Dropzone (Invalid) 1`] = `
<section
  className="dropzone is-invalid"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  />
</section>
`;

exports[`Storyshots Dropzone Dropzone (Large) 1`] = `
<section
  className="dropzone is-large"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  />
</section>
`;

exports[`Storyshots Dropzone Dropzone (with Alert) 1`] = `
<section
  className="dropzone has-inline-alert"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={
      Object {
        "alignSelf": "flex-end",
      }
    }
  />
  <div
    className="alert alert-warning alert-inline"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Lorem ipsum dolor sit amet, 
      <a
        href="#"
      >
        consectetur adipiscing elit
      </a>
      . In nec augue eu lacus aliquam lobortis.
      <i
        className="sg-icon sg-icon-x"
        onClick={[Function]}
        style={null}
      />
    </p>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone (with JSX Content and Alert) 1`] = `
<section
  className="dropzone has-inline-alert"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={
      Object {
        "alignSelf": "flex-end",
      }
    }
  >
    <span>
      <a
        href="https://github.com/sendgrid/style-guide/issues/198"
      >
        Here is the Style Guide issue
      </a>
       where we're going to fix this.
    </span>
  </div>
  <div
    className="alert alert-warning alert-inline"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Lorem ipsum dolor sit amet, 
      <a
        href="#"
      >
        consectetur adipiscing elit
      </a>
      . In nec augue eu lacus aliquam lobortis.
      <i
        className="sg-icon sg-icon-x"
        onClick={[Function]}
        style={null}
      />
    </p>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone (with JSX Content) 1`] = `
<section
  className="dropzone"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  >
    <span>
      Drag and drop your file or 
      <a
        href="#"
      >
        click here to select a file
      </a>
      .
    </span>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone (with String Content and Alert) 1`] = `
<section
  className="dropzone has-inline-alert"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={
      Object {
        "alignSelf": "flex-end",
      }
    }
  >
    This currently doesn't look great and I am well aware of that.
  </div>
  <div
    className="alert alert-warning alert-inline"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Lorem ipsum dolor sit amet, 
      <a
        href="#"
      >
        consectetur adipiscing elit
      </a>
      . In nec augue eu lacus aliquam lobortis.
      <i
        className="sg-icon sg-icon-x"
        onClick={[Function]}
        style={null}
      />
    </p>
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone (with String Content) 1`] = `
<section
  className="dropzone"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  >
    Drag and drop your file here.
  </div>
</section>
`;

exports[`Storyshots Dropzone Dropzone 1`] = `
<section
  className="dropzone"
  onDragEnd={undefined}
  onDragLeave={undefined}
  onDragOver={undefined}
  onDrop={undefined}
  role="hidden"
  style={
    Object {
      "alignItems": "center",
      "display": "flex",
      "flexWrap": "wrap",
      "fontSize": "14px",
      "justifyContent": "center",
    }
  }
>
  <div
    style={Object {}}
  />
</section>
`;

exports[`Storyshots EmailCard Email Card - Disable Inbox Details 1`] = `
<div
  className="email-card-wrap is-disable-inbox-details"
>
  <div
    className="email-card-send-time"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Select Send Time
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Edit Mode 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Select Send Time
    </a>
    
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Live 1`] = `
<div
  className="email-card-wrap is-live"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Multi Editable 1`] = `
<div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          1
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          2
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          3
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-editable"
  >
    <div
      className="email-card-send-time"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Select Send Time
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          4
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="btn-list email-card-add"
  >
    <button
      className="btn btn-secondary"
      disabled={false}
      id={undefined}
      onClick={null}
      type="button"
    >
      Add an Email
    </button>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Multi Live 1`] = `
<div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send Instantly
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          1
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 1
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          2
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 2
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          3
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  <div
    className="email-card-wrap is-live"
  >
    <div
      className="email-card-send-time has-value"
    >
      <a
        className="btn btn-secondary"
        href="#"
        id={undefined}
        onClick={undefined}
      >
        Send 3 Days After Email 3
      </a>
      
    </div>
    <div
      className="email-card-stats"
    >
      <div
        className="email-stats"
      >
        <p
          className="stat"
        >
          12230
        </p>
        <p
          className="label"
        >
          Emails Sent
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat delivered"
        >
          966
        </p>
        <p
          className="label"
        >
          Delivered
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-opens"
        >
          80.2%
        </p>
        <p
          className="label"
        >
          Unique Opens
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unique-clicks"
        >
          6024
        </p>
        <p
          className="label"
        >
          Unique Clicks
        </p>
      </div>
      <div
        className="email-stats"
      >
        <p
          className="stat unsubscribes"
        >
          0
        </p>
        <p
          className="label"
        >
          Unsubscribes
        </p>
      </div>
    </div>
    <div
      className="email-card"
    >
      <div
        className="email-card-count"
      >
        <p>
          Email 
          4
        </p>
      </div>
      <div
        className="email-card-content"
      >
        <button
          className="btn btn-secondary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <span
            className="email-card-content-edit"
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
            Edit
          </span>
        </button>
      </div>
      <div
        className="email-card-details"
      >
        <table>
          <tbody>
            <tr>
              <td
                className="label required"
              >
                Subject
              </td>
              <td>
                <a
                  href="#"
                >
                  Welcome to SendGrid
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label"
              >
                Preheader
              </td>
              <td>
                <a
                  href="#"
                >
                  Get starting sending up to 12,000 emails Today
                </a>
              </td>
            </tr>
            <tr>
              <td
                className="label required"
              >
                From Sender
              </td>
              <td>
                <a
                  href="#"
                >
                  Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
                </a>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card - Paused 1`] = `
<div
  className="email-card-wrap is-paused"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with Alerts  1`] = `
<div
  className="email-card-wrap has-alert is-live"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <div
    className="alert alert-warning"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
      Changes you've made to this email have not been applied to your live automation.
      <button
        className="btn btn-primary btn-small"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Save and Apply
      </button>
      <span
        className="discard-icon"
        data-tooltip="Discard Changes"
        data-tooltip-pos="up"
      >
        <i
          className="sg-icon sg-icon-trash"
          onClick={[Function]}
          style={null}
        />
      </span>
    </p>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with Blank Statistics 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        —
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        —
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        —
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        —
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        —
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with No Statistics 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email Card with validation errors 1`] = `
<div
  className="email-card-wrap has-alert"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content invalid-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Add Email Content
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Edit Subject
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Select Sender
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <div
    className="alert alert-danger"
    role="alert"
  >
    <p>
      <i
        className="sg-icon sg-icon-warning"
        onClick={undefined}
        style={null}
      />
      Please select a
       
      <strong>
        <a
          href="javascript: void 0"
        >
          subject
        </a>
      </strong>
       and
       
      <strong>
        <a
          href="javascript: void 0"
        >
          sender
        </a>
      </strong>
      , and add
       
      <strong>
        <a
          href="javascript: void 0"
        >
          content
        </a>
      </strong>
       to this email.
    </p>
  </div>
</div>
`;

exports[`Storyshots EmailCard Email card with actions 1`] = `
<div
  className="email-card-wrap"
>
  <div
    className="email-card-send-time has-value"
  >
    <a
      className="btn btn-secondary"
      href="#"
      id={undefined}
      onClick={undefined}
    >
      Send Instantly
    </a>
    
  </div>
  <div
    className="email-card-stats"
  >
    <div
      className="email-stats"
    >
      <p
        className="stat"
      >
        12230
      </p>
      <p
        className="label"
      >
        Emails Sent
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat delivered"
      >
        966
      </p>
      <p
        className="label"
      >
        Delivered
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-opens"
      >
        80.2%
      </p>
      <p
        className="label"
      >
        Unique Opens
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unique-clicks"
      >
        6024
      </p>
      <p
        className="label"
      >
        Unique Clicks
      </p>
    </div>
    <div
      className="email-stats"
    >
      <p
        className="stat unsubscribes"
      >
        0
      </p>
      <p
        className="label"
      >
        Unsubscribes
      </p>
    </div>
  </div>
  <div
    className="email-card"
  >
    <div
      className="email-card-count"
    >
      <p>
        Email 
        1
      </p>
    </div>
    <div
      className="email-card-content"
    >
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        <span
          className="email-card-content-edit"
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
          Edit
        </span>
      </button>
    </div>
    <div
      className="email-card-details"
    >
      <table>
        <tbody>
          <tr>
            <td
              className="label required"
            >
              Subject
            </td>
            <td>
              <a
                href="#"
              >
                Welcome to SendGrid
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label"
            >
              Preheader
            </td>
            <td>
              <a
                href="#"
              >
                Get starting sending up to 12,000 emails Today
              </a>
            </td>
          </tr>
          <tr>
            <td
              className="label required"
            >
              From Sender
            </td>
            <td>
              <a
                href="#"
              >
                Tyler Hale &lt;tyler.hale@sendgrid.com&gt;
              </a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
    <div
      className="email-row-actions"
    >
      <i
        className="sg-icon sg-icon-ellipsis"
        onClick={undefined}
        style={null}
      />
      <div
        className="action-icons"
      >
        <span
          data-tooltip="Edit"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-pencil"
            onClick={undefined}
            style={null}
          />
        </span>
        <span
          data-tooltip="Duplicate"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-copy"
            onClick={undefined}
            style={null}
          />
        </span>
        <span
          data-tooltip="Create Template"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-create"
            onClick={undefined}
            style={null}
          />
        </span>
        <span
          data-tooltip="Export HTML"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-export"
            onClick={undefined}
            style={null}
          />
        </span>
        <span
          data-tooltip="Preview"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-view"
            onClick={undefined}
            style={null}
          />
        </span>
        <span
          data-tooltip="Delete"
          data-tooltip-pos="up"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-trash"
            onClick={undefined}
            style={null}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Empty State Empty State With Buttons 1`] = `
<div
  className="table-state is-empty"
>
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-primary"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Primary
    </button>
    <button
      className="btn btn-secondary"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Secondary
    </button>
  </div>
</div>
`;

exports[`Storyshots Empty State Empty State With Everything 1`] = `
<div>
  <div
    className="table-state is-empty"
  >
    <i
      className="sg-icon sg-icon-contacts"
      onClick={undefined}
      style={null}
    />
    <h2>
      Get started adding contacts
    </h2>
    <p>
      Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
    </p>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Primary
      </button>
      <button
        className="btn btn-secondary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Secondary
      </button>
    </div>
  </div>
  <p
    className="small is-center"
  >
    <span>
      <i
        className="sg-icon sg-icon-help"
        onClick={undefined}
        style={null}
      />
       
    </span>
    <strong>
      Need help? 
    </strong>
    <a
      href="#"
    >
      Get more info
    </a>
     
    on adding and updating contacts.
  </p>
</div>
`;

exports[`Storyshots Empty State Empty State With Icon 1`] = `
<div
  className="table-state is-empty"
>
  <i
    className="sg-icon sg-icon-contacts"
    onClick={undefined}
    style={null}
  />
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting.  Use the Add List or Segment button above to get started.
  </p>
</div>
`;

exports[`Storyshots Empty State Empty State With Render Prop 1`] = `
<div
  className="table-state is-empty"
>
  <svg
    className="icon icon-editor-dnd"
    height="40"
    viewBox="140 30 60 60"
    width="40"
  >
    <g
      fill="none"
    >
      <path
        className="window"
        d="M198.25 83.75c0 2.485-2.015 4.5-4.5 4.5h-47.5c-2.484 0-4.5-2.016-4.5-4.5v-47.5c0-2.484 2.016-4.5 4.5-4.5h47.5c2.485 0 4.5 2.015 4.5 4.5v47.5zm1 0v-47.5c0-3.037-2.462-5.5-5.5-5.5h-47.5c-3.036 0-5.5 2.464-5.5 5.5v47.5c0 3.036 2.464 5.5 5.5 5.5h47.5c3.038 0 5.5-2.463 5.5-5.5zm-58-39.5h57.5c.276 0 .5-.224.5-.5s-.224-.5-.5-.5h-57.5c-.276 0-.5.224-.5.5s.224.5.5.5zm9.5-6.75c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75zm6.5 0c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75zm6.5 0c0 .414-.336.75-.75.75s-.75-.336-.75-.75.336-.75.75-.75.75.336.75.75zm1 0c0-.966-.784-1.75-1.75-1.75s-1.75.784-1.75 1.75.784 1.75 1.75 1.75 1.75-.784 1.75-1.75z"
        fill="#445B6C"
      />
      <path
        className="content"
        d="M191.25 55.75h-42.5l.5.5v-7.5l-.5.5h42.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-42.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h42.5zm-35 4h-7.5c-.276 0-.5.224-.5.5v20c0 .276.224.5.5.5h7.5c.276 0 .5-.224.5-.5v-20c0-.276-.224-.5-.5-.5zm0 1l-.5-.5v20l.5-.5h-7.5l.5.5v-20l-.5.5h7.5zm35 6.5h-27.5l.5.5v-7.5l-.5.5h27.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-27.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h27.5zm0 11.5h-27.5l.5.5v-7.5l-.5.5h27.5l-.5-.5v7.5l.5-.5zm0 1c.276 0 .5-.224.5-.5v-7.5c0-.276-.224-.5-.5-.5h-27.5c-.276 0-.5.224-.5.5v7.5c0 .276.224.5.5.5h27.5z"
        fill="#1A82E2"
      />
    </g>
  </svg>
  <h2>
    Get started adding contacts
  </h2>
  <p>
    Add and update your contacts via CSV upload or manually add them one at a time, then create static lists or dynamic segments for better targeting. Use the Add List or Segment button above to get started.
  </p>
</div>
`;

exports[`Storyshots File Upload Basic File Upload with JSX Content 1`] = `
<section
  onDragEnd={[Function]}
  onDragLeave={[Function]}
  onDragOver={[Function]}
  onDrop={[Function]}
>
  <section
    className="dropzone"
    onDragEnd={undefined}
    onDragLeave={undefined}
    onDragOver={undefined}
    onDrop={undefined}
    role="hidden"
    style={
      Object {
        "alignItems": "center",
        "display": "flex",
        "flexWrap": "wrap",
        "fontSize": "14px",
        "justifyContent": "center",
      }
    }
  >
    <div
      style={Object {}}
    >
      <div
        className={undefined}
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
          }
        }
      >
        <i
          className="sg-icon sg-icon-csv is-size-30"
          onClick={undefined}
          style={
            Object {
              "marginRight": "12px",
            }
          }
        />
        <span>
          Drag and drop your CSV file here or 
          <a
            href="#"
            onClick={[Function]}
          >
            select a CSV file to upload
          </a>
          .
        </span>
      </div>
    </div>
  </section>
  <input
    accept="text/csv"
    onChange={[Function]}
    style={
      Object {
        "display": "none",
      }
    }
    type="file"
  />
</section>
`;

exports[`Storyshots FilterableList FilterableList 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList as a Container Component 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter Container
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="btn-list"
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": "20px",
          }
        }
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Clear Button in Header 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
      <div
        className="btn-list"
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": "20px",
          }
        }
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Clear
        </button>
      </div>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots FilterableList FilterableList with Two Input Fields and Custom Filtering Logic 1`] = `
<section
  className="FilterableList"
>
  <div
    className="filter-wrap"
  >
    <div
      className="filter-header"
    >
      <p
        className="filter-title"
      >
        Filter
      </p>
    </div>
    <div
      className="filter-list"
      style={
        Object {
          "display": "flex",
          "justifyContent": "space-between",
        }
      }
    >
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="name-filter"
        >
          Name
        </label>
        <input
          aria-describedby=""
          id="name-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="input-text-wrap"
        style={
          Object {
            "width": "100%",
          }
        }
      >
        <label
          className="input-text-label"
          htmlFor="type-filter"
        >
          Type
        </label>
        <input
          aria-describedby=""
          id="type-filter"
          name={undefined}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          step={null}
          type="text"
          value=""
        />
        
        
      </div>
      <div
        className="btn-list"
        style={
          Object {
            "display": "flex",
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingLeft": "20px",
          }
        }
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Clear
        </button>
      </div>
    </div>
  </div>
  <div
    className="FilterableListItems"
  >
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Orange
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Apples
       (
      Fruit
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Tomato
       (
      Vegetable
      )
    </article>
    <article
      style={
        Object {
          "border": "1px solid #e9ecef",
          "margin": "10px 0",
          "padding": "20px",
          "width": "100%",
        }
      }
    >
      Cucumber
       (
      Vegetable
      )
    </article>
  </div>
</section>
`;

exports[`Storyshots Flex Header Edit Code 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Email Code Module
        <span
          data-tooltip="sup"
          data-tooltip-pos="down"
        >
          <i
            className="sg-icon sg-icon-info-circle"
            onClick={undefined}
            style={null}
          />
        </span>
      </h3>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    
    <div
      className="btn-list"
    >
      <button
        className="btn btn-tertiary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Cancel
      </button>
      <button
        className="btn btn-primary btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Update
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Flex Header Email Preview 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Title Goes Here
      </h3>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Edit
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Flex Header Image Library 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Image Library
      </h3>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    
  </div>
</header>
`;

exports[`Storyshots Flex Header KANPE - No Credits 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Title Goes Here
      </h3>
    </div>
    <div
      className="flex-header-tabs"
    >
      <div
        className="flex-header-tab is-active"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        Run New Test
      </div>
      <div
        className="flex-header-tab"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        View Test Results
      </div>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    
  </div>
</header>
`;

exports[`Storyshots Flex Header KANPE - Only one Tab. No secondary 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Title Goes Here
      </h3>
    </div>
    <div
      className="flex-header-tabs"
    >
      <div
        className="flex-header-tab is-active"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        Run New Test
      </div>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    <div
      className="counter"
    >
      Credits
      <span
        className="counter-bubble"
      >
        26
      </span>
    </div>
  </div>
</header>
`;

exports[`Storyshots Flex Header KANPE - Second Tab Active 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Title Goes Here
      </h3>
    </div>
    <div
      className="flex-header-tabs"
    >
      <div
        className="flex-header-tab"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        Run New Test
      </div>
      <div
        className="flex-header-tab is-active"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        View Test Results
      </div>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    <div
      className="counter"
    >
      Credits
      <span
        className="counter-bubble"
      >
        26
      </span>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-tertiary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Buy Credits
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Flex Header KANPE 1`] = `
<header
  className="flex-header"
>
  <div>
    <a
      className="flex-header-action"
      onClick={[Function]}
    >
      <i
        className="sg-icon sg-icon-x"
        onClick={undefined}
        style={null}
      />
    </a>
    <div
      className="flex-header-title"
    >
      <h3>
        Title Goes Here
      </h3>
    </div>
    <div
      className="flex-header-tabs"
    >
      <div
        className="flex-header-tab is-active"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        Run New Test
      </div>
      <div
        className="flex-header-tab"
        onClick={undefined}
      >
        <i
          className="sg-icon sg-icon-mail"
          onClick={undefined}
          style={null}
        />
        View Test Results
      </div>
    </div>
  </div>
  <div
    className="flex-header-right"
  >
    <div
      className="counter"
    >
      Credits
      <span
        className="counter-bubble"
      >
        26
      </span>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-tertiary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Buy Credits
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots FullScreen Modal Fullscreen Modal 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="modal-fullscreen is-open"
  >
    <header
      className="flex-header"
    >
      <div>
        <a
          className="flex-header-action"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-x"
            onClick={undefined}
            style={null}
          />
        </a>
        <div
          className="flex-header-title"
        >
          <h3>
            Fullscreen Modal
          </h3>
        </div>
      </div>
      <div
        className="flex-header-right"
      >
        
      </div>
    </header>
    <div
      className="modal-content has-padding"
    >
      <div>
        Here is some content
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots FullScreen Modal Fullscreen Modal with renderProps 1`] = `
<div>
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>
  <div
    className="modal-fullscreen is-open"
  >
    <header
      className="flex-header"
    >
      <div>
        <a
          className="flex-header-action"
          onClick={[Function]}
        >
          <i
            className="sg-icon sg-icon-x"
            onClick={undefined}
            style={null}
          />
        </a>
        <div
          className="flex-header-title"
        >
          <h3>
            With Render Props
            <span
              data-tooltip="here is a tooltip"
              data-tooltip-pos="down"
            >
              <i
                className="sg-icon sg-icon-info-circle"
                onClick={undefined}
                style={null}
              />
            </span>
          </h3>
        </div>
      </div>
      <div
        className="flex-header-right"
      >
        
        <div
          className="btn-list"
        >
          <button
            className="btn btn-primary btn-on-dark"
            disabled={false}
            id={undefined}
            onClick={[Function]}
            type="button"
          >
            Confirm
          </button>
          <button
            className="btn btn-secondary btn-on-dark"
            disabled={false}
            id={undefined}
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
        </div>
      </div>
    </header>
    <div
      className="modal-content has-padding"
    >
      <div>
        Here is some content
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid 4/8 Column Config 1`] = `
<div>
  <div
    className="row"
  >
    <div
      className="col-4"
    >
      <div
        className="card"
      >
        <h2
          className=""
        >
          A Four-Wide Column
        </h2>
        <p>
          This card is four columns wide.
        </p>
      </div>
    </div>
    <div
      className="col-8"
    >
      <div
        className="card"
      >
        <h2
          className=""
        >
          An Eight-Wide Column
        </h2>
        <p>
          This card is eight columns wide.
        </p>
      </div>
    </div>
  </div>
  <hr
    className="is-thin"
    data-label={null}
  />
</div>
`;

exports[`Storyshots Grid Default (No Width or Offset) 1`] = `
<div
  className="row"
>
  <div
    className=""
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        A Default Column
      </h2>
      <p>
        This card is in a column with no width or offset.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Offset 5 1`] = `
<div
  className="row"
>
  <div
    className="col-offset-5"
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        An Offset Only Column
      </h2>
      <p>
        This card specifies 5 offset and no width.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Using Width & Offset 1`] = `
<div
  className="row"
>
  <div
    className="col-6 col-offset-3"
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        A Six-Wide Column
      </h2>
      <p>
        This card is in a column six units wide, offset by three.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Grid Width 12 1`] = `
<div
  className="row"
>
  <div
    className="col-12"
  >
    <div
      className="card"
    >
      <h2
        className=""
      >
        A Width Only Column
      </h2>
      <p>
        This card specifies 12 width and no offset.
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Image Library with initial image that does not exist in the library 1`] = `
<div
  className="modal-fullscreen is-open"
>
  <header
    className="flex-header"
  >
    <div>
      <a
        className="flex-header-action"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </a>
      <div
        className="flex-header-title"
      >
        <h3>
          Image Library
        </h3>
      </div>
    </div>
    <div
      className="flex-header-right"
    >
      
    </div>
  </header>
  <div
    className="modal-content"
  >
    <div
      className="wrap"
    >
      <div
        className="list-container details-open"
      >
        <section
          onDragEnd={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        >
          <section
            className="dropzone"
            onDragEnd={undefined}
            onDragLeave={undefined}
            onDragOver={undefined}
            onDrop={undefined}
            role="hidden"
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexWrap": "wrap",
                "fontSize": "14px",
                "justifyContent": "center",
              }
            }
          >
            <div
              style={Object {}}
            >
              <div
                className={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                  }
                }
              >
                <i
                  className="sg-icon sg-icon-image is-size-30"
                  onClick={undefined}
                  style={
                    Object {
                      "marginRight": "12px",
                    }
                  }
                />
                <span>
                  Drag and drop your images here, or
                   
                  <a
                    href="#"
                    onClick={[Function]}
                  >
                    choose images to upload
                  </a>
                  .
                </span>
              </div>
            </div>
          </section>
          <input
            accept="image/gif,image/jpeg,image/png"
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </section>
        <section
          className="list"
        />
      </div>
      <div
        className="wrap"
      >
        <a
          className="x-wrap"
          href="javascript: void 0"
          onClick={[Function]}
        >
          <i
            className="x sg-icon sg-icon-x"
            onClick={undefined}
            style={null}
          />
        </a>
        <h3>
          Image Details
        </h3>
        <div
          className="img-wrap"
        >
          <img
            src="https://via.placeholder.com/45x15"
          />
        </div>
        <div
          className="metadata-wrap"
        >
          <h3>
            File Name: 
          </h3>
          <p
            className="small"
          >
            image.jpeg
          </p>
        </div>
        <div
          className="metadata-wrap"
        >
          <h3>
            Image URL: 
          </h3>
          <p
            className="small"
          >
            https://via.placeholder.com/45x15
          </p>
        </div>
        <div
          className="btn-list"
        >
          <button
            className="btn btn-secondary"
            disabled={false}
            id={undefined}
            onClick={[Function]}
            type="button"
          >
            Delete
          </button>
          <button
            className="btn btn-primary"
            disabled={false}
            id={undefined}
            onClick={[Function]}
            type="button"
          >
            Insert Image
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Image Library with upload alert, no images 1`] = `
<div
  className="modal-fullscreen is-open"
>
  <header
    className="flex-header"
  >
    <div>
      <a
        className="flex-header-action"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </a>
      <div
        className="flex-header-title"
      >
        <h3>
          Image Library
        </h3>
      </div>
    </div>
    <div
      className="flex-header-right"
    >
      
    </div>
  </header>
  <div
    className="modal-content"
  >
    <div
      className="wrap"
    >
      <div
        className="list-container"
      >
        <section
          onDragEnd={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        >
          <section
            className="dropzone has-inline-alert"
            onDragEnd={undefined}
            onDragLeave={undefined}
            onDragOver={undefined}
            onDrop={undefined}
            role="hidden"
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexWrap": "wrap",
                "fontSize": "14px",
                "justifyContent": "center",
              }
            }
          >
            <div
              style={
                Object {
                  "alignSelf": "flex-end",
                }
              }
            >
              <div
                className={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                  }
                }
              >
                <i
                  className="sg-icon sg-icon-image is-size-30"
                  onClick={undefined}
                  style={
                    Object {
                      "marginRight": "12px",
                    }
                  }
                />
                <span>
                  Drag and drop your images here, or
                   
                  <a
                    href="#"
                    onClick={[Function]}
                  >
                    choose images to upload
                  </a>
                  .
                </span>
              </div>
            </div>
            <div
              className="alert alert-danger alert-inline"
              role="alert"
            >
              <p>
                <i
                  className="sg-icon sg-icon-warning"
                  onClick={undefined}
                  style={null}
                />
                The image you're attempting to upload exceeds our per-image size limit.
                <i
                  className="sg-icon sg-icon-x"
                  onClick={undefined}
                  style={null}
                />
              </p>
            </div>
          </section>
          <input
            accept="image/gif,image/jpeg,image/png"
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </section>
        <section
          className="list"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Image Library without upload alert, with images 1`] = `
<div
  className="modal-fullscreen is-open"
>
  <header
    className="flex-header"
  >
    <div>
      <a
        className="flex-header-action"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-x"
          onClick={undefined}
          style={null}
        />
      </a>
      <div
        className="flex-header-title"
      >
        <h3>
          Image Library
        </h3>
      </div>
    </div>
    <div
      className="flex-header-right"
    >
      
    </div>
  </header>
  <div
    className="modal-content"
  >
    <div
      className="wrap"
    >
      <div
        className="list-container"
      >
        <section
          onDragEnd={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        >
          <section
            className="dropzone"
            onDragEnd={undefined}
            onDragLeave={undefined}
            onDragOver={undefined}
            onDrop={undefined}
            role="hidden"
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "flexWrap": "wrap",
                "fontSize": "14px",
                "justifyContent": "center",
              }
            }
          >
            <div
              style={Object {}}
            >
              <div
                className={undefined}
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                  }
                }
              >
                <i
                  className="sg-icon sg-icon-image is-size-30"
                  onClick={undefined}
                  style={
                    Object {
                      "marginRight": "12px",
                    }
                  }
                />
                <span>
                  Drag and drop your images here, or
                   
                  <a
                    href="#"
                    onClick={[Function]}
                  >
                    choose images to upload
                  </a>
                  .
                </span>
              </div>
            </div>
          </section>
          <input
            accept="image/gif,image/jpeg,image/png"
            onChange={[Function]}
            style={
              Object {
                "display": "none",
              }
            }
            type="file"
          />
        </section>
        <section
          className="list"
        >
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/100x300"
            />
          </div>
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/300x300"
            />
          </div>
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/300x100"
            />
          </div>
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/25x25"
            />
          </div>
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/50x400"
            />
          </div>
          <div
            className="thumbnail-container"
            onClick={[Function]}
          >
            <img
              src="https://via.placeholder.com/400x50"
            />
          </div>
        </section>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Label Labels 1`] = `
Array [
  <span
    className="label label-sent"
  >
    Sent
  </span>,
  <br />,
  <span
    className="label label-delivered"
  >
    Delivered
  </span>,
  <br />,
  <span
    className="label label-live"
  >
    Live
  </span>,
  <br />,
  <span
    className="label label-success"
  >
    Success
  </span>,
  <br />,
  <span
    className="label label-scheduled"
  >
    Scheduled
  </span>,
  <br />,
  <span
    className="label label-pick-winner"
  >
    Pick Winner
  </span>,
  <br />,
  <span
    className="label label-draft"
  >
    Draft
  </span>,
  <br />,
  <span
    className="label label-global"
  >
    Global
  </span>,
  <br />,
  <span
    className="label label-list"
  >
    List
  </span>,
  <br />,
  <span
    className="label label-progress"
  >
    Progress
  </span>,
  <br />,
  <span
    className="label label-bounced"
  >
    Bounced
  </span>,
  <br />,
  <span
    className="label label-canceled"
  >
    Canceled
  </span>,
  <br />,
  <span
    className="label label-disabled"
  >
    Disabled
  </span>,
  <br />,
  <span
    className="label label-paused"
  >
    Paused
  </span>,
  <br />,
  <span
    className="label label-error"
  >
    Error
  </span>,
  <br />,
  <span
    className="label label-optimized"
  >
    Optimized
  </span>,
  <br />,
]
`;

exports[`Storyshots Loaders Centered Loader 1`] = `
<div
  style={
    Object {
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered"
  >
    <rect
      className="logo-square bottom-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square bottom-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-middle"
      height={10}
      width={10}
    />
    <rect
      className="logo-square top-right"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-left"
      height={10}
      width={10}
    />
    <rect
      className="logo-square middle-right"
      height={10}
      width={10}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Fragment Loader 1`] = `
<svg
  className="fragment-loader"
>
  <rect
    className="fragment-square left"
    height="10"
    width="10"
  />
  <rect
    className="fragment-square middle"
    height="10"
    width="10"
  />
  <rect
    className="fragment-square right"
    height="10"
    width="10"
  />
</svg>
`;

exports[`Storyshots Loaders Large Loader 1`] = `
<svg
  className="sg-loader is-large"
>
  <rect
    className="logo-square bottom-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square bottom-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-middle"
    height={20}
    width={20}
  />
  <rect
    className="logo-square top-right"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-left"
    height={20}
    width={20}
  />
  <rect
    className="logo-square middle-right"
    height={20}
    width={20}
  />
</svg>
`;

exports[`Storyshots Loaders Loader on Dark 1`] = `
<div
  style={
    Object {
      "backgroundColor": "#294661",
      "height": "100vh",
    }
  }
>
  <svg
    className="sg-loader is-centered is-large loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square bottom-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-middle"
      height={20}
      width={20}
    />
    <rect
      className="logo-square top-right"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-left"
      height={20}
      width={20}
    />
    <rect
      className="logo-square middle-right"
      height={20}
      width={20}
    />
  </svg>
</div>
`;

exports[`Storyshots Loaders Small Loader 1`] = `
<svg
  className="sg-loader is-small"
>
  <rect
    className="logo-square bottom-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square bottom-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-middle"
    height={5}
    width={5}
  />
  <rect
    className="logo-square top-right"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-left"
    height={5}
    width={5}
  />
  <rect
    className="logo-square middle-right"
    height={5}
    width={5}
  />
</svg>
`;

exports[`Storyshots Loaders Standard Loader 1`] = `
<svg
  className="sg-loader"
>
  <rect
    className="logo-square bottom-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square bottom-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-middle"
    height={10}
    width={10}
  />
  <rect
    className="logo-square top-right"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-left"
    height={10}
    width={10}
  />
  <rect
    className="logo-square middle-right"
    height={10}
    width={10}
  />
</svg>
`;

exports[`Storyshots Meter Meter Above 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Health
  </span>
   
  <span
    className="meter-value"
  >
    95
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-above-50"
      style={
        Object {
          "width": "95%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 25 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Stamina
  </span>
   
  <span
    className="meter-value"
  >
    13
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-25"
      style={
        Object {
          "width": "13%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots Meter Meter Below 50 1`] = `
<div
  className="meter-container"
>
  <span
    className="meter-title"
  >
    Mana
  </span>
   
  <span
    className="meter-value"
  >
    43
    %
  </span>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill is-below-50"
      style={
        Object {
          "width": "43%",
        }
      }
    />
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with longer content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
        <p>
          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean rutrum neque nec felis pellentesque, mollis varius libero consectetur. Nulla elementum pellentesque accumsan. Fusce sit amet quam quis elit lobortis egestas sed eu turpis. Nullam luctus pellentesque enim placerat pretium. Vivamus viverra nunc a tortor convallis egestas. Vestibulum mattis, nunc quis dapibus rhoncus, dui magna feugiat tortor, ut rutrum orci dui dictum leo. Fusce convallis diam sit amet luctus maximus. Pellentesque vehicula faucibus nunc, at cursus mi congue quis. Pellentesque tempus, est eget vestibulum ultricies, elit odio blandit diam, in venenatis risus leo luctus orci.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <div>
          <p>
            Test your integration by sending email through your application.
          </p>
          <p>
            Vivamus quis volutpat nibh. Maecenas nibh eros, fermentum posuere convallis sed, consectetur et massa. Donec feugiat a nisl quis porttitor. Ut egestas, libero non cursus posuere, quam nulla feugiat magna, eget rutrum justo odio a nisi. Donec tincidunt urna in vulputate ultricies. Fusce id dolor vehicula, tincidunt neque vel, iaculis nulla. Duis sed arcu leo.
          </p>
        </div>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots NumberedSteps Numbered Steps with short content 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
  >
    <ol
      className="numbered-steps"
    >
      <li>
        <h3>
          Use these settings
        </h3>
        <p>
          Configure your application with the settings below.
        </p>
      </li>
      <li>
        <h3>
          Send your first email
        </h3>
        <p>
          Test your integration by sending email through your application.
        </p>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots PageHeader Page Header containing: Breadcrumbs and a Page Heading 1`] = `
<header>
  <ol
    className="breadcrumb"
  >
    <li>
      <a
        href="#"
      >
        Contacts
      </a>
    </li>
    <li>
      <a
        href="#"
      >
        Upload CSV
      </a>
    </li>
    <li />
  </ol>
  <div
    className="content-header"
  >
    <h1
      style={
        Object {
          "color": "#294661",
          "fontFamily": "Colfax,Proxima Nova,Helvetica,sans-serif",
        }
      }
    >
      Page Title
    </h1>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Create Campaign
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Percent Input Basic 1`] = `
<div
  className="row"
>
  <div
    className="col-1"
  >
    <div
      className="input-text-wrap has-units"
      data-units="%"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-percentage"
      >
        
      </label>
      <input
        aria-describedby=""
        id="test-percentage"
        max={100}
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="AUTO"
        step={1}
        type="number"
        value=""
      />
      
      
    </div>
  </div>
</div>
`;

exports[`Storyshots Progress Horizontal Progress 1`] = `
<section
  className="progress-container"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Progress Vertical Progress 1`] = `
<section
  className="progress-container is-vertical"
>
  <ul
    className="progress-stages"
  >
    <li
      className="is-done"
    >
      <label>
        Step One
      </label>
    </li>
    <li
      className="is-selected"
    >
      <label>
        Step Two
      </label>
    </li>
    <li
      className=""
    >
      <label>
        Step Three
      </label>
    </li>
  </ul>
</section>
`;

exports[`Storyshots Radio Checked Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-id-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-id-1"
  >
    Jim
  </label>
</div>
`;

exports[`Storyshots Radio Checked and Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={true}
    id="bill"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="bill-id-1"
  />
  <label
    className="input-radio-label"
    htmlFor="bill"
  >
    Bill
  </label>
</div>
`;

exports[`Storyshots Radio Disabled Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={true}
    id="disabled-cust-1"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="disabled-jim-id-7"
  />
  <label
    className="input-radio-label"
    htmlFor="disabled-cust-1"
  >
    disabled Jim
  </label>
</div>
`;

exports[`Storyshots Radio Multiple radio btns 1`] = `
Array [
  <div
    className="input-radio-wrap"
  >
    <input
      checked={true}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-1"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-1"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-1"
    >
      Choice 1
    </label>
  </div>,
  <div
    className="input-radio-wrap"
  >
    <input
      checked={false}
      defaultChecked={undefined}
      disabled={undefined}
      id="radio-choice-2"
      name="radio-grp-1"
      onChange={[Function]}
      type="radio"
      value="choice-2"
    />
    <label
      className="input-radio-label"
      htmlFor="radio-choice-2"
    >
      Choice 2
    </label>
  </div>,
]
`;

exports[`Storyshots Radio Radio with tooltip 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={true}
    defaultChecked={undefined}
    disabled={undefined}
    id="radio-choice"
    name={undefined}
    onChange={undefined}
    type="radio"
    value="choice"
  />
  <label
    className="input-radio-label"
    htmlFor="radio-choice"
  >
    <span
      className="has-underline"
      data-tooltip="Tooltip"
      data-tooltip-length={undefined}
      data-tooltip-pos="up"
    >
      <span>
        Label
      </span>
    </span>
  </label>
</div>
`;

exports[`Storyshots Radio Standard Radio 1`] = `
<div
  className="input-radio-wrap"
>
  <input
    checked={false}
    defaultChecked={undefined}
    disabled={undefined}
    id="cust-type"
    name={undefined}
    onChange={[Function]}
    type="radio"
    value="SYSTEM_TX_VAL"
  />
  <label
    className="input-radio-label"
    htmlFor="cust-type"
  >
    Transactional
  </label>
</div>
`;

exports[`Storyshots Save Button Primary 1`] = `
<button
  className="btn btn-primary btn-save undefined"
  disabled={false}
  id="stui-test-locator-abc"
  onClick={[Function]}
  style={
    Object {
      "minWidth": "123px",
    }
  }
  type="button"
>
  <svg
    className="sg-loader is-small loader-on-dark"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  <i
    className="sg-icon sg-icon-check"
    onClick={undefined}
    style={null}
  />
  <div
    className="btn-text"
  >
    Save Draft
  </div>
</button>
`;

exports[`Storyshots Save Button Primary on dark 1`] = `
<div
  style={
    Object {
      "background": "#060235",
      "padding": "25px",
      "width": "300px",
    }
  }
>
  <button
    className="btn btn-primary btn-save undefined btn-on-dark"
    disabled={false}
    id="stui-test-locator-abc"
    onClick={[Function]}
    style={
      Object {
        "minWidth": "123px",
      }
    }
    type="button"
  >
    <svg
      className="sg-loader is-small loader-on-dark"
    >
      <rect
        className="logo-square bottom-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square bottom-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-right"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-right"
        height={5}
        width={5}
      />
    </svg>
    <i
      className="sg-icon sg-icon-check"
      onClick={undefined}
      style={null}
    />
    <div
      className="btn-text"
    >
      Save Draft
    </div>
  </button>
</div>
`;

exports[`Storyshots Save Button Secondary 1`] = `
<button
  className="btn btn-secondary btn-save undefined"
  disabled={false}
  id="stui-test-locator-abc"
  onClick={[Function]}
  style={
    Object {
      "minWidth": "123px",
    }
  }
  type="button"
>
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  <i
    className="sg-icon sg-icon-check"
    onClick={undefined}
    style={null}
  />
  <div
    className="btn-text"
  >
    Save Draft
  </div>
</button>
`;

exports[`Storyshots Save Button Secondary on dark 1`] = `
<div
  style={
    Object {
      "background": "#060235",
      "padding": "25px",
      "width": "300px",
    }
  }
>
  <button
    className="btn btn-secondary btn-save undefined btn-on-dark"
    disabled={false}
    id="stui-test-locator-abc"
    onClick={[Function]}
    style={
      Object {
        "minWidth": "123px",
      }
    }
    type="button"
  >
    <svg
      className="sg-loader is-small loader-on-dark"
    >
      <rect
        className="logo-square bottom-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square bottom-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-right"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-right"
        height={5}
        width={5}
      />
    </svg>
    <i
      className="sg-icon sg-icon-check"
      onClick={undefined}
      style={null}
    />
    <div
      className="btn-text"
    >
      Save Draft
    </div>
  </button>
</div>
`;

exports[`Storyshots Save Button With icon 1`] = `
<button
  className="btn btn-secondary btn-save undefined has-icon"
  disabled={false}
  id="stui-test-locator-abc"
  onClick={[Function]}
  style={
    Object {
      "minWidth": "123px",
    }
  }
  type="button"
>
  <i
    className="sg-icon sg-icon-save-draft"
    onClick={undefined}
    style={null}
  />
  <svg
    className="sg-loader is-small"
  >
    <rect
      className="logo-square bottom-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square bottom-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-middle"
      height={5}
      width={5}
    />
    <rect
      className="logo-square top-right"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-left"
      height={5}
      width={5}
    />
    <rect
      className="logo-square middle-right"
      height={5}
      width={5}
    />
  </svg>
  <i
    className="sg-icon sg-icon-check"
    onClick={undefined}
    style={null}
  />
  <div
    className="btn-text"
  >
    Save Draft
  </div>
</button>
`;

exports[`Storyshots Save Button With icon on dark 1`] = `
<div
  style={
    Object {
      "background": "#060235",
      "padding": "25px",
      "width": "300px",
    }
  }
>
  <button
    className="btn btn-secondary btn-save undefined btn-on-dark has-icon"
    disabled={false}
    id="stui-test-locator-abc"
    onClick={[Function]}
    style={
      Object {
        "minWidth": "123px",
      }
    }
    type="button"
  >
    <i
      className="sg-icon sg-icon-save-draft"
      onClick={undefined}
      style={null}
    />
    <svg
      className="sg-loader is-small loader-on-dark"
    >
      <rect
        className="logo-square bottom-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square bottom-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-middle"
        height={5}
        width={5}
      />
      <rect
        className="logo-square top-right"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-left"
        height={5}
        width={5}
      />
      <rect
        className="logo-square middle-right"
        height={5}
        width={5}
      />
    </svg>
    <i
      className="sg-icon sg-icon-check"
      onClick={undefined}
      style={null}
    />
    <div
      className="btn-text"
    >
      Save Draft
    </div>
  </button>
</div>
`;

exports[`Storyshots Segment Term Segment term which cannot be edited 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term is-live"
    onClick={undefined}
  >
    <p>
      The first time a contact is added to 
      <strong>
        People in Los Angeles
      </strong>
    </p>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term which is being edited 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-separator is-editable"
    onClick={undefined}
  >
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-a"
      >
        Select send conditions
      </label>
      <div
        className="input-select-wrap"
      >
        <div
          className="css-5jw5i7"
          id="select-a"
          onKeyDown={[Function]}
        >
          <div
            className="css-18rrerb"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className="css-1m8oe7c"
            >
              <div
                className="css-pka8w3"
              >
                Select...
              </div>
              <div
                className="css-1g6gooi"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    aria-label={undefined}
                    aria-labelledby={undefined}
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    className={undefined}
                    disabled={false}
                    id="react-select-29-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className="css-1wy0on6"
            >
              <span
                className="css-0"
              />
              <div
                aria-hidden="true"
                className="css-7afory"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-19bqh2r"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-b"
      >
        Select contact criteria
      </label>
      <div
        className="input-select-wrap"
      >
        <div
          className="css-5jw5i7"
          id="select-b"
          onKeyDown={[Function]}
        >
          <div
            className="css-18rrerb"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className="css-1m8oe7c"
            >
              <div
                className="css-pka8w3"
              >
                Select...
              </div>
              <div
                className="css-1g6gooi"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    aria-label={undefined}
                    aria-labelledby={undefined}
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    className={undefined}
                    disabled={false}
                    id="react-select-30-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className="css-1wy0on6"
            >
              <span
                className="css-0"
              />
              <div
                aria-hidden="true"
                className="css-7afory"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-19bqh2r"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <a
      className="btn btn-small btn-trash"
      onClick={[Function]}
      style={
        Object {
          "color": "slate-60",
          "cursor": "pointer",
        }
      }
    >
      <i
        className="sg-icon sg-icon-trash"
        onClick={undefined}
        style={null}
      />
    </a>
  </div>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-secondary has-icon"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      <i
        className="sg-icon sg-icon-plus"
        onClick={undefined}
        style={null}
      />
      Add Condition
    </button>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term which is being edited and is filled out 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-separator is-editable"
    onClick={undefined}
  >
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-a"
      >
        Select send conditions
      </label>
      <div
        className="input-select-wrap"
      >
        <div
          className="css-5jw5i7"
          id="select-a"
          onKeyDown={[Function]}
        >
          <div
            className="css-1bhqczi"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className="css-1m8oe7c"
            >
              <div
                className="css-1v8euj5"
              >
                the first time a contact
              </div>
              <div
                className="css-1g6gooi"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    aria-label={undefined}
                    aria-labelledby={undefined}
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    className={undefined}
                    disabled={false}
                    id="react-select-31-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className="css-1wy0on6"
            >
              <span
                className="css-0"
              />
              <div
                aria-hidden="true"
                className="css-7afory"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-19bqh2r"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="input-select-wrap"
    >
      <label
        className="input-select-label"
        htmlFor="select-b"
      >
        Select contact criteria
      </label>
      <div
        className="input-select-wrap"
      >
        <div
          className="css-5jw5i7"
          id="select-b"
          onKeyDown={[Function]}
        >
          <div
            className="css-18rrerb"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className="css-1m8oe7c"
            >
              <div
                className="css-pka8w3"
              >
                Select...
              </div>
              <div
                className="css-1g6gooi"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    aria-label={undefined}
                    aria-labelledby={undefined}
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    className={undefined}
                    disabled={false}
                    id="react-select-32-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className="css-1wy0on6"
            >
              <span
                className="css-0"
              />
              <div
                aria-hidden="true"
                className="css-7afory"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-19bqh2r"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="input-select-wrap"
    >
      <div
        className="input-select-wrap"
      >
        <div
          className="css-5jw5i7"
          id="select-c"
          onKeyDown={[Function]}
        >
          <div
            className="css-18rrerb"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <div
              className="css-1m8oe7c"
            >
              <div
                className="css-pka8w3"
              >
                Select...
              </div>
              <div
                className="css-1g6gooi"
              >
                <div
                  className=""
                  style={
                    Object {
                      "display": "inline-block",
                    }
                  }
                >
                  <input
                    aria-autocomplete="list"
                    aria-label={undefined}
                    aria-labelledby={undefined}
                    autoCapitalize="none"
                    autoComplete="off"
                    autoCorrect="off"
                    className={undefined}
                    disabled={false}
                    id="react-select-33-input"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    spellCheck="false"
                    style={
                      Object {
                        "background": 0,
                        "border": 0,
                        "boxSizing": "content-box",
                        "color": "inherit",
                        "fontSize": "inherit",
                        "opacity": 1,
                        "outline": 0,
                        "padding": 0,
                        "width": "1px",
                      }
                    }
                    tabIndex="0"
                    type="text"
                    value=""
                  />
                  <div
                    style={
                      Object {
                        "height": 0,
                        "left": 0,
                        "overflow": "scroll",
                        "position": "absolute",
                        "top": 0,
                        "visibility": "hidden",
                        "whiteSpace": "pre",
                      }
                    }
                  >
                    
                  </div>
                </div>
              </div>
            </div>
            <div
              className="css-1wy0on6"
            >
              <span
                className="css-0"
              />
              <div
                aria-hidden="true"
                className="css-7afory"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="css-19bqh2r"
                  focusable="false"
                  height={20}
                  viewBox="0 0 20 20"
                  width={20}
                >
                  <path
                    d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <a
      className="btn btn-small btn-trash"
      onClick={[Function]}
      style={
        Object {
          "color": "slate-60",
          "cursor": "pointer",
        }
      }
    >
      <i
        className="sg-icon sg-icon-trash"
        onClick={undefined}
        style={null}
      />
    </a>
  </div>
  <div
    className="btn-list"
  >
    <button
      className="btn btn-secondary has-icon"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      <i
        className="sg-icon sg-icon-plus"
        onClick={undefined}
        style={null}
      />
      Add Condition
    </button>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term with alert 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Entry Criteria
  </p>
  <div
    className="segment-term has-alert has-separator"
    onClick={[Function]}
  >
    <p>
      The first time a contact is added to 
      <strong>
        People in Los Angeles
      </strong>
    </p>
    <i
      className="segment-term-edit sg-icon sg-icon-pencil"
      onClick={undefined}
      style={
        Object {
          "color": "slate-60",
          "opacity": 1,
        }
      }
    />
    <div
      className="alert alert-warning"
      role="alert"
    >
      <p>
        <i
          className="sg-icon sg-icon-warning"
          onClick={undefined}
          style={null}
        />
        Changes you've made to your entry criteria have not been applied to your live automation.
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Save and Apply
        </button>
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment term with radio btns and alert 1`] = `
<div
  className="segment-term-wrap"
>
  <p
    className="segment-term-title"
  >
    Exit Criteria
  </p>
  <div
    className="segment-term has-alert has-radios is-editable"
    onClick={undefined}
  >
    <div
      className="input-radio-wrap"
    >
      <input
        checked={true}
        defaultChecked={undefined}
        disabled={undefined}
        id="radio-a"
        name="example-grp"
        onChange={[Function]}
        type="radio"
        value="a"
      />
      <label
        className="input-radio-label"
        htmlFor="radio-a"
      >
        Option 1
      </label>
    </div>
    <div
      className="input-radio-wrap"
    >
      <input
        checked={true}
        defaultChecked={undefined}
        disabled={undefined}
        id="radio-b"
        name="example-grp"
        onChange={[Function]}
        type="radio"
        value="b"
      />
      <label
        className="input-radio-label"
        htmlFor="radio-b"
      >
        Option 2
      </label>
    </div>
    <div
      className="alert alert-warning"
      role="alert"
    >
      <p>
        <i
          className="sg-icon sg-icon-warning"
          onClick={undefined}
          style={null}
        />
        Changes you've made to your exit criteria have not been applied to your live automation.
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Save and Apply
        </button>
      </p>
    </div>
  </div>
</div>
`;

exports[`Storyshots Segment Term Segment terms 1`] = `
<div>
  <div>
    <div
      className="segment-term-wrap"
    >
      <p
        className="segment-term-title"
      >
        Entry Criteria
      </p>
      <div
        className="segment-term has-separator"
        onClick={[Function]}
      >
        <p>
          The first time a contact is added to 
          <strong>
            People in Los Angeles
          </strong>
        </p>
        <i
          className="segment-term-edit sg-icon sg-icon-pencil"
          onClick={undefined}
          style={
            Object {
              "color": "slate-60",
              "opacity": 1,
            }
          }
        />
      </div>
    </div>
  </div>
  <div>
    <div
      className="segment-term-wrap"
    >
      <p
        className="segment-term-title"
      >
        Or
      </p>
      <div
        className="segment-term"
        onClick={[Function]}
      >
        <p>
          Every time a contact is added to 
          <strong>
            People in Denver
          </strong>
        </p>
        <i
          className="segment-term-edit sg-icon sg-icon-pencil"
          onClick={undefined}
          style={
            Object {
              "color": "slate-60",
              "opacity": 1,
            }
          }
        />
      </div>
    </div>
  </div>
  <div>
    <div
      className="segment-term-wrap"
    >
      <p
        className="segment-term-title"
      >
        Entry Criteria
      </p>
      <div
        className="segment-term has-separator is-editable"
        onClick={undefined}
      >
        <div
          className="input-select-wrap"
        >
          <label
            className="input-select-label"
            htmlFor="select-a"
          >
            Select send conditions
          </label>
          <div
            className="input-select-wrap"
          >
            <div
              className="css-5jw5i7"
              id="select-a"
              onKeyDown={[Function]}
            >
              <div
                className="css-1bhqczi"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className="css-1m8oe7c"
                >
                  <div
                    className="css-1v8euj5"
                  >
                    The first time a contact
                  </div>
                  <div
                    className="css-1g6gooi"
                  >
                    <div
                      className=""
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        className={undefined}
                        disabled={false}
                        id="react-select-27-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="css-1wy0on6"
                >
                  <span
                    className="css-0"
                  />
                  <div
                    aria-hidden="true"
                    className="css-7afory"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="css-19bqh2r"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="input-select-wrap"
        >
          <label
            className="input-select-label"
            htmlFor="select-b"
          >
            Select contact criteria
          </label>
          <div
            className="input-select-wrap"
          >
            <div
              className="css-5jw5i7"
              id="select-b"
              onKeyDown={[Function]}
            >
              <div
                className="css-1bhqczi"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className="css-1m8oe7c"
                >
                  <div
                    className="css-1v8euj5"
                  >
                    Abandons a cart
                  </div>
                  <div
                    className="css-1g6gooi"
                  >
                    <div
                      className=""
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        className={undefined}
                        disabled={false}
                        id="react-select-28-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="css-1wy0on6"
                >
                  <span
                    className="css-0"
                  />
                  <div
                    aria-hidden="true"
                    className="css-7afory"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="css-19bqh2r"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <a
          className="btn btn-small btn-trash"
          onClick={[Function]}
          style={
            Object {
              "color": "slate-60",
              "cursor": "pointer",
            }
          }
        >
          <i
            className="sg-icon sg-icon-trash"
            onClick={undefined}
            style={null}
          />
        </a>
      </div>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-secondary has-icon"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          <i
            className="sg-icon sg-icon-plus"
            onClick={undefined}
            style={null}
          />
          Add Condition
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Custom classnames and styles 1`] = `
<div>
  <style>
    
        .my-control-wrapper {
          background: #927;
          color: #eee;
          padding: 1em;
        }
      
    f
  </style>
  <div
    className="css-10nd86i"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="my-control-wrapper"
    >
      <p>
        My amazing select!
      </p>
      <div
        className="css-vj8t7z"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1hwfws3"
        >
          <div
            className="css-1492t68"
          >
            Select...
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-18-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-d8oujb"
          />
          <div
            aria-hidden="true"
            className="css-1ep9fjw"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Disabled 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <div
    className="input-select-wrap is-disabled"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-bcrqx"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-1v8euj5"
          >
            Extraordinary
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-7-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Disabled with tooltip 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap is-disabled"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-14mtm9n"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Goobers
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={true}
                id="react-select-8-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-1ei7cy1"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <span
              className={undefined}
              data-tooltip="Still works!"
              data-tooltip-length={undefined}
              data-tooltip-pos="left"
            >
              <i
                className="sg-icon sg-icon-info-circle"
                onClick={undefined}
                style={null}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Multi select - no values 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Select...
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-10-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Multi select - open 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Mushroom
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Fire flower
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-12-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <div
            aria-hidden="true"
            className="css-1hyfx7x"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <div
        className="css-1wcxi4x"
        onMouseDown={[Function]}
        onMouseMove={[Function]}
      >
        <div
          className="css-11unzgr"
        >
          <div
            className="css-1f1tals"
            id="react-select-12-option-2"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Star
          </div>
          <div
            className="css-1f1tals"
            id="react-select-12-option-3"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Feather
          </div>
          <div
            className="css-1f1tals"
            id="react-select-12-option-4"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Frog
          </div>
          <div
            className="css-1f1tals"
            id="react-select-12-option-5"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Tanooki
          </div>
          <div
            className="css-1f1tals"
            id="react-select-12-option-6"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            1-up
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Multi select 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Mushroom
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Fire flower
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-11-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <div
            aria-hidden="true"
            className="css-1hyfx7x"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Option groups - open 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Feels vs. Powerups
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-17-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <div
        className="css-1wcxi4x"
        onMouseDown={[Function]}
        onMouseMove={[Function]}
      >
        <div
          className="css-11unzgr"
        >
          <div
            className="css-1s9izoc"
          >
            <div
              className="css-1ub2vtp"
              id="react-select-17-group-0-heading"
            >
              Feels
            </div>
            <div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-0"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Double plus ungood
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-1"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Good
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-2"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Great
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-3"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Grand
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-4"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Fantastic
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-5"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Superb
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-6"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Stupendous
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-0-7"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Extraordinary
              </div>
            </div>
          </div>
          <div
            className="css-1s9izoc"
          >
            <div
              className="css-1ub2vtp"
              id="react-select-17-group-1-heading"
            >
              Powerups
            </div>
            <div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-0"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Mushroom
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-1"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Fire flower
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-2"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Star
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-3"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Feather
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-4"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Frog
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-5"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                Tanooki
              </div>
              <div
                className="css-1f1tals"
                id="react-select-17-option-1-6"
                onClick={[Function]}
                onMouseMove={[Function]}
                onMouseOver={[Function]}
                role="option"
                tabIndex={-1}
              >
                1-up
              </div>
            </div>
          </div>
        </div>
      </div>
      <input
        name="groups"
        type="hidden"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Option groups 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Feels vs. Powerups
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-16-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <input
        name="groups"
        type="hidden"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Searchable 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-1v8euj5"
          >
            Good
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-9-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Standard 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-1v8euj5"
          >
            Good
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-2-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <input
        name="single"
        type="hidden"
        value="sys_good_01"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Standard open 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Goobers
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-3-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <div
        className="css-1wcxi4x"
        onMouseDown={[Function]}
        onMouseMove={[Function]}
      >
        <div
          className="css-11unzgr"
        >
          <div
            className="css-1f1tals"
            id="react-select-3-option-0"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Double plus ungood
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-1"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Good
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-2"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Great
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-3"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Grand
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-4"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Fantastic
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-5"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Superb
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-6"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Stupendous
          </div>
          <div
            className="css-1f1tals"
            id="react-select-3-option-7"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Extraordinary
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Tagging - open 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Mushroom
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Fire flower
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              row
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-14-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <div
            aria-hidden="true"
            className="css-1hyfx7x"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
      <div
        className="css-1wcxi4x"
        onMouseDown={[Function]}
        onMouseMove={[Function]}
      >
        <div
          className="css-11unzgr"
        >
          <div
            className="css-1f1tals"
            id="react-select-14-option-2"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Star
          </div>
          <div
            className="css-1f1tals"
            id="react-select-14-option-3"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Feather
          </div>
          <div
            className="css-1f1tals"
            id="react-select-14-option-4"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Frog
          </div>
          <div
            className="css-1f1tals"
            id="react-select-14-option-5"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            Tanooki
          </div>
          <div
            className="css-1f1tals"
            id="react-select-14-option-6"
            onClick={[Function]}
            onMouseMove={[Function]}
            onMouseOver={[Function]}
            role="option"
            tabIndex={-1}
          >
            1-up
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Tagging - tooltip 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Mushroom
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Fire flower
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              row
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-15-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <div
            aria-hidden="true"
            className="css-1hyfx7x"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-1ei7cy1"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <span
              className={undefined}
              data-tooltip="Much Power"
              data-tooltip-length={undefined}
              data-tooltip-pos="down"
            >
              <i
                className="sg-icon sg-icon-info-circle"
                onClick={undefined}
                style={null}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select Tagging 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-1bhqczi"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Mushroom
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              Fire flower
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-113lvzv"
          >
            <div
              className="css-erhrr7"
            >
              row
            </div>
            <div
              className="css-duvmhs"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                aria-hidden="true"
                className="css-19bqh2r"
                focusable="false"
                height={14}
                viewBox="0 0 20 20"
                width={14}
              >
                <path
                  d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
                />
              </svg>
            </div>
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-13-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <div
            aria-hidden="true"
            className="css-1hyfx7x"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select With long tooltip 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Goobers
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-6-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-1ei7cy1"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <span
              className={undefined}
              data-tooltip="This tooltip has a lot of words, but that's okay because it should wrap. Don't be afraid to be descriptive using this select tooltip!"
              data-tooltip-length="large"
              data-tooltip-pos="left"
            >
              <i
                className="sg-icon sg-icon-info-circle"
                onClick={undefined}
                style={null}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select With placeholder 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Goobers
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-4-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-7afory"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <path
                d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
              />
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select With tooltip 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="input-select-wrap"
  >
    <div
      className="css-5jw5i7"
      id={undefined}
      onKeyDown={[Function]}
    >
      <div
        className="css-18rrerb"
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
      >
        <div
          className="css-1m8oe7c"
        >
          <div
            className="css-pka8w3"
          >
            Goobers
          </div>
          <div
            className="css-1g6gooi"
          >
            <div
              className=""
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-autocomplete="list"
                aria-label={undefined}
                aria-labelledby={undefined}
                autoCapitalize="none"
                autoComplete="off"
                autoCorrect="off"
                className={undefined}
                disabled={false}
                id="react-select-5-input"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                spellCheck="false"
                style={
                  Object {
                    "background": 0,
                    "border": 0,
                    "boxSizing": "content-box",
                    "color": "inherit",
                    "fontSize": "inherit",
                    "opacity": 1,
                    "outline": 0,
                    "padding": 0,
                    "width": "1px",
                  }
                }
                tabIndex="0"
                type="text"
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </div>
        </div>
        <div
          className="css-1wy0on6"
        >
          <span
            className="css-0"
          />
          <div
            aria-hidden="true"
            className="css-1ei7cy1"
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <span
              className={undefined}
              data-tooltip="Great stuff!"
              data-tooltip-length={undefined}
              data-tooltip-pos="left"
            >
              <i
                className="sg-icon sg-icon-info-circle"
                onClick={undefined}
                style={null}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select/Label + Info disabled + error 1`] = `
<div
  className="input-select-wrap is-disabled is-error"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-vqbbd0"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={true}
              id="react-select-23-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info danger isDisabled"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info disabled - defaultValue - multi select 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-bcrqx"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-1wvqrm2"
        >
          <div
            className="css-11a1ixy"
          >
            Mushroom
          </div>
          <div
            className="css-ae68b3"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
          >
            <svg
              aria-hidden="true"
              className="css-19bqh2r"
              focusable="false"
              height={14}
              viewBox="0 0 20 20"
              width={14}
            >
              <path
                d="M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z"
              />
            </svg>
          </div>
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={true}
              id="react-select-22-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info isDisabled"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info disabled - defaultValue 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-bcrqx"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-1v8euj5"
        >
          Mushroom
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={true}
              id="react-select-21-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info isDisabled"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info disabled 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-14mtm9n"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={true}
              id="react-select-20-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info isDisabled"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info error 1`] = `
<div
  className="input-select-wrap is-error"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-6qcrv1"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-19-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info danger"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info info 1`] = `
<div
  className="input-select-wrap"
>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-18rrerb"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-26-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info"
  >
    Read this to better understand the dropdown.
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info label - required 1`] = `
<div
  className="input-select-wrap is-required"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-18rrerb"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={false}
              id="react-select-25-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
  <span
    className="input-info"
  >
    it's a trap
  </span>
</div>
`;

exports[`Storyshots Select/Label + Info label 1`] = `
<div
  className="input-select-wrap is-disabled"
>
  <label
    className="input-select-label"
  >
    Powerups
  </label>
  <div
    className="css-5jw5i7"
    id={undefined}
    onKeyDown={[Function]}
  >
    <div
      className="css-14mtm9n"
      onMouseDown={[Function]}
      onTouchEnd={[Function]}
    >
      <div
        className="css-1m8oe7c"
      >
        <div
          className="css-pka8w3"
        >
          Select...
        </div>
        <div
          className="css-1g6gooi"
        >
          <div
            className=""
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <input
              aria-autocomplete="list"
              aria-label={undefined}
              aria-labelledby={undefined}
              autoCapitalize="none"
              autoComplete="off"
              autoCorrect="off"
              className={undefined}
              disabled={true}
              id="react-select-24-input"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              spellCheck="false"
              style={
                Object {
                  "background": 0,
                  "border": 0,
                  "boxSizing": "content-box",
                  "color": "inherit",
                  "fontSize": "inherit",
                  "opacity": 1,
                  "outline": 0,
                  "padding": 0,
                  "width": "1px",
                }
              }
              tabIndex="0"
              type="text"
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </div>
      </div>
      <div
        className="css-1wy0on6"
      >
        <span
          className="css-0"
        />
        <div
          aria-hidden="true"
          className="css-7afory"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <svg
            aria-hidden="true"
            className="css-19bqh2r"
            focusable="false"
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <path
              d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots SideModal SideModal 1`] = `
Array [
  <button
    className="btn btn-primary"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Open Modal
  </button>,
  <div
    className="side-modal"
  >
    <h1>
      Very cool! 😍
    </h1>
    <button
      className="btn btn-secondary"
      disabled={false}
      id={undefined}
      onClick={[Function]}
      type="button"
    >
      Alright then
    </button>
  </div>,
  <div
    className="modal-mask"
    onClick={[Function]}
  />,
]
`;

exports[`Storyshots Simple Select Default Value, label, info 1`] = `
<div
  className="simple-select-wrap is-required"
>
  <label
    className="simple-select-label"
  >
    Check out this default
  </label>
  <div
    className="simple-select"
  >
    <div
      className="simple-select-control"
      onMouseDown={[Function]}
    >
      Grand
    </div>
  </div>
  <span
    className="input-info"
  >
    For your information, this is required
  </span>
</div>
`;

exports[`Storyshots Simple Select Required, label 1`] = `
<div
  className="simple-select-wrap is-required"
>
  <label
    className="simple-select-label"
  >
    This is required
  </label>
  <div
    className="simple-select"
  >
    <div
      className="simple-select-control"
      onMouseDown={[Function]}
    >
      Choose a thing
    </div>
  </div>
</div>
`;

exports[`Storyshots Simple Select Required, label, info 1`] = `
<div
  className="simple-select-wrap is-required"
>
  <label
    className="simple-select-label"
  >
    This is required
  </label>
  <div
    className="simple-select"
  >
    <div
      className="simple-select-control"
      onMouseDown={[Function]}
    >
      Choose a thing
    </div>
  </div>
  <span
    className="input-info"
  >
    For your information, this is required
  </span>
</div>
`;

exports[`Storyshots Simple Select Wacky custom option styling 1`] = `
<div
  className="simple-select-wrap is-required"
>
  <label
    className="simple-select-label"
  >
    This is required
  </label>
  <div
    className="simple-select"
  >
    <div
      className="simple-select-control"
      onMouseDown={[Function]}
    >
      Select...
    </div>
  </div>
  <span
    className="input-info"
  >
    For your information, this is required
  </span>
</div>
`;

exports[`Storyshots Simple Select placeholder, does not steal focus 1`] = `
Array [
  <div
    className="simple-select-wrap is-required"
  >
    <label
      className="simple-select-label"
    >
      This is required
    </label>
    <div
      className="simple-select"
    >
      <div
        className="simple-select-control"
        onMouseDown={[Function]}
      >
        Choose a thing
      </div>
    </div>
  </div>,
  <div>
    <p>
      Type here and then open the dropdown. You shouldn't loose focus from the textArea at any point
    </p>
    <textarea
      onChange={[Function]}
      value=""
    />
  </div>,
]
`;

exports[`Storyshots Slider Slider with Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
  <div
    className="input-range-percent"
  >
    40
    %
  </div>
</div>
`;

exports[`Storyshots Slider Slider without Label 1`] = `
<div
  className="input-range-wrap"
>
  <input
    id={undefined}
    max="100"
    min="0"
    onChange={[Function]}
    type="range"
    value={40}
  />
</div>
`;

exports[`Storyshots Small Footer Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    What the what? 
  </strong>
  This component is just fantastic.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer Simple 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  Get more info on adding and updating contacts.
</p>
`;

exports[`Storyshots Small Footer Need Help Footer with Link 1`] = `
<p
  className="small is-center"
>
  <span>
    <i
      className="sg-icon sg-icon-help"
      onClick={undefined}
      style={null}
    />
     
  </span>
  <strong>
    Need help? 
  </strong>
  <a
    href="#"
  >
    Get more info
  </a>
   
  on adding and updating contacts.
</p>
`;

exports[`Storyshots Split Card Split Card (w/ labeled separator) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-split is-thin"
    >
      <h2
        className=""
      >
        Split Card
      </h2>
      <p>
        Line of copy.
      </p>
      <div
        className="split-content"
      >
        <p>
          Section 1
        </p>
        <hr
          className="has-label"
          data-label="separator"
        />
        <p>
          Section 2
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Split Card Split Card (w/ unlabeled separator) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-split is-thin"
    >
      <h2
        className=""
      >
        Split Card
      </h2>
      <p>
        Line of copy.
      </p>
      <div
        className="split-content"
      >
        <p>
          Section 1
        </p>
        <hr
          className=""
          data-label={undefined}
        />
        <p>
          Section 2
        </p>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Switch Switch - Disabled 1`] = `
<div
  className="switch-toggle is-disabled"
>
  <input
    checked={true}
    className="switch-checkbox"
    disabled={true}
    id="switch-example-disabled"
    onChange={[Function]}
    type="checkbox"
    value=""
  />
  <label
    className="switch-label"
    htmlFor="switch-example-disabled"
  >
    <div
      className="switch-option switch-option-off"
    >
      off
    </div>
    <div
      className="switch-option switch-option-on"
    >
      on
    </div>
  </label>
  <div
    className="switch-selector"
  />
</div>
`;

exports[`Storyshots Switch Switch - Off 1`] = `
<div
  className="switch-toggle"
>
  <input
    checked={undefined}
    className="switch-checkbox"
    disabled={undefined}
    id="switch-example-off"
    onChange={[Function]}
    type="checkbox"
    value=""
  />
  <label
    className="switch-label"
    htmlFor="switch-example-off"
  >
    <div
      className="switch-option switch-option-off"
    >
      off
    </div>
    <div
      className="switch-option switch-option-on"
    >
      on
    </div>
  </label>
  <div
    className="switch-selector"
  />
</div>
`;

exports[`Storyshots Switch Switch - On 1`] = `
<div
  className="switch-toggle"
>
  <input
    checked={true}
    className="switch-checkbox"
    disabled={undefined}
    id="switch-example-on"
    onChange={[Function]}
    type="checkbox"
    value=""
  />
  <label
    className="switch-label"
    htmlFor="switch-example-on"
  >
    <div
      className="switch-option switch-option-off"
    >
      off
    </div>
    <div
      className="switch-option switch-option-on"
    >
      on
    </div>
  </label>
  <div
    className="switch-selector"
  />
</div>
`;

exports[`Storyshots Table Sortable (Custom Render) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-button"
          onClick={undefined}
          style={null}
        />
         
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        <i
          className="sg-icon sg-icon-button"
          onClick={undefined}
          style={null}
        />
         
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Awesome Wednesday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        7
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Beautiful Thursday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        8
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Celebratory Tuesday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        6
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Delightful Friday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        9
        /2018
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        <a
          href="#"
        >
          Excellent Monday
        </a>
      </td>
      <td
        className={undefined}
      >
        2/
        5
        /2018
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Sortable (Default Render, Custom Sort) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Awesome Wednesday
      </td>
      <td
        className={undefined}
      >
        7
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Beautiful Thursday
      </td>
      <td
        className={undefined}
      >
        8
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Celebratory Tuesday
      </td>
      <td
        className={undefined}
      >
        6
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Delightful Friday
      </td>
      <td
        className={undefined}
      >
        9
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Excellent Monday
      </td>
      <td
        className={undefined}
      >
        5
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Sortable (Defaults) 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort sort-asc"
        onClick={[Function]}
      >
        Name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Date
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Awesome Wednesday
      </td>
      <td
        className={undefined}
      >
        7
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Beautiful Thursday
      </td>
      <td
        className={undefined}
      >
        8
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Celebratory Tuesday
      </td>
      <td
        className={undefined}
      >
        6
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Delightful Friday
      </td>
      <td
        className={undefined}
      >
        9
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className={undefined}
      >
        Excellent Monday
      </td>
      <td
        className={undefined}
      >
        5
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table Standard 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
      data-name="name1"
    >
      <th
        className=""
        onClick={[Function]}
      >
        Contacts
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Date Added
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Last Opened
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Last Clicked
      </th>
      <th
        className=""
        onClick={[Function]}
      >
        Actions
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          todd.moy@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        02/02/2015
      </td>
      <td
        className="stats"
      >
        02/10/2016
      </td>
      <td
        className="stats"
      >
        02/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          eric.tjossem@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        03/03/2015
      </td>
      <td
        className="stats"
      >
        04/10/2016
      </td>
      <td
        className="stats"
      >
        04/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
    <tr
      className={undefined}
    >
      <td
        className="contact"
      >
        <a
          href="#"
        >
          alex.thomsen@sendgrid.com
        </a>
      </td>
      <td
        className="stats"
      >
        05/02/2015
      </td>
      <td
        className="stats"
      >
        06/10/2016
      </td>
      <td
        className="stats"
      >
        07/08/2016
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="View"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Copy"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Table With dropdown menu 1`] = `
<table
  className="table-wrap"
>
  <thead
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <th
        className="sort"
        onClick={[Function]}
      >
        Status
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Campaign name
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Delivered
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Opens
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Clicks
      </th>
      <th
        className="sort"
        onClick={[Function]}
      >
        Unsubscribes
      </th>
      <th
        className="actions"
        onClick={[Function]}
      >
        <div
          className="btn-list"
        >
          <div
            className="btn btn-dropdown dropdown btn-dropdown-gear"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-gear"
              onClick={undefined}
              style={null}
            />
            <ul
              className="dropdown-menu"
            >
              <a
                className="dropdown-link"
                href="javascript: void 0"
              >
                View stats as numbers
              </a>
              <a
                className="dropdown-link"
                href="javascript: void 0"
              >
                View stats as percentages
              </a>
            </ul>
          </div>
        </div>
      </th>
    </tr>
  </thead>
  <tbody
    className={undefined}
  >
    <tr
      className={undefined}
    >
      <td
        className="cell-label"
      >
        <span
          className="label label-draft"
        >
          Draft
        </span>
      </td>
      <td
        className="campaign-name"
      >
        <a
          href="javascript: void 0"
        >
          Fall Into Action
        </a>
      </td>
      <td
        className="stats-delivered"
      >
        —
      </td>
      <td
        className="stats-opens"
      >
        —
      </td>
      <td
        className="stats-clicks"
      >
        —
      </td>
      <td
        className="stats-unsubscribes"
      >
        —
      </td>
      <td
        className="actions"
      >
        <i
          className="sg-icon sg-icon-ellipsis"
          onClick={undefined}
          style={null}
        />
        <div
          className="action-icons"
        >
          <span
            data-tooltip="Edit"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-pencil"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Duplicate"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-copy"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Create template"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-create"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Export HTML"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-export"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Preview"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-view"
              onClick={undefined}
              style={null}
            />
          </span>
          <span
            data-tooltip="Delete"
            data-tooltip-pos="up"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-trash"
              onClick={undefined}
              style={null}
            />
          </span>
        </div>
      </td>
    </tr>
  </tbody>
</table>
`;

exports[`Storyshots Tabs Centered Tabs 1`] = `
<ul
  className="tab-wrapper is-centered"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Icon Tabs 1`] = `
<ul
  className="tab-wrapper is-centered"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-desktop-view"
      onClick={undefined}
      style={null}
    />
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-mobile-view"
      onClick={undefined}
      style={null}
    />
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    <i
      className="sg-icon sg-icon-text-only"
      onClick={undefined}
      style={null}
    />
     
  </li>
</ul>
`;

exports[`Storyshots Tabs Standard Tabs 1`] = `
<ul
  className="tab-wrapper"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Tabs Zero-Border Tabs 1`] = `
<ul
  className="tab-wrapper zero-border"
>
  <li
    className="tab is-active"
    onClick={[Function]}
  >
    All
     
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Requesting Access
     
    <span
      className="tab-number"
    >
      3
    </span>
  </li>
  <li
    className="tab"
    onClick={[Function]}
  >
    Invited
     
    <span
      className="tab-number"
    >
      5
    </span>
  </li>
</ul>
`;

exports[`Storyshots Template Card Blank Card 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb is-blank"
    >
      <svg
        className="blank-template"
        height="160"
        viewBox="0 0 160 160"
        width="160"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <rect
            fill="#FFF"
            height="158.231"
            stroke="#F4F6F7"
            strokeWidth="1.769"
            width="158.231"
            x=".885"
            y=".885"
          />
          <g
            fill="#F4F6F7"
            fillRule="nonzero"
            transform="translate(14 128)"
          >
            <polygon
              points="0 2 0 0 132 0 132 2"
            />
            <polygon
              points="0 12 0 10 132 10 132 12"
            />
            <polygon
              points="0 21 0 19 132 19 132 21"
            />
          </g>
          <rect
            fill="#F4F6F7"
            height="7"
            rx="3.5"
            width="73"
            x="44"
            y="110"
          />
          <g
            transform="translate(0 33)"
          >
            <rect
              fill="#F4F6F7"
              height="2"
              width="160"
            />
            <rect
              fill="#F4F6F7"
              height="2"
              width="160"
              y="62"
            />
            <g
              stroke="#F4F6F7"
              strokeLinejoin="round"
              strokeWidth="1.769"
              transform="translate(62 18)"
            >
              <polygon
                points="26.6 7 15.4 23.5 8.4 15.25 0 29 35 29"
              />
              <circle
                cx="7"
                cy="3"
                r="3"
              />
            </g>
          </g>
          <rect
            fill="#F4F6F7"
            height="5"
            width="132"
            x="14"
            y="14"
          />
        </g>
      </svg>
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Blank Template
    </p>
  </div>
</div>
`;

exports[`Storyshots Template Card Card with Image - Code 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb"
    >
      <img
        alt="Template Image"
        src="http://via.placeholder.com/240"
      />
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Modern
    </p>
    <p
      className="editor-type"
    >
      <i
        className="sg-icon sg-icon-editor-code"
        onClick={undefined}
        style={null}
      />
      Code Editor
    </p>
  </div>
</div>
`;

exports[`Storyshots Template Card Card with Image - Custom editor type 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb"
    >
      <img
        alt="Template Image"
        src="http://via.placeholder.com/240"
      />
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Modern
    </p>
    <div
      className="editor-type"
    >
      <div
        style={
          Object {
            "color": "red",
          }
        }
      >
        Styled Editor
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Template Card Card with Image - Design 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb"
    >
      <img
        alt="Template Image"
        src="http://via.placeholder.com/240"
      />
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Modern
    </p>
    <p
      className="editor-type"
    >
      <i
        className="sg-icon sg-icon-editor-design"
        onClick={undefined}
        style={null}
      />
      Design Editor
    </p>
  </div>
</div>
`;

exports[`Storyshots Template Card Card with Image - Diff Name 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb"
    >
      <img
        alt="Template Image"
        src="http://via.placeholder.com/240"
      />
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Underwater Blue
    </p>
    <p
      className="editor-type"
    >
      <i
        className="sg-icon sg-icon-editor-design"
        onClick={undefined}
        style={null}
      />
      Design Editor
    </p>
  </div>
</div>
`;

exports[`Storyshots Template Card Card with Image - No editor type 1`] = `
<div
  style={
    Object {
      "width": "240px",
    }
  }
>
  <div
    className="template-wrap"
  >
    <div
      className="thumb"
    >
      <img
        alt="Template Image"
        src="http://via.placeholder.com/240"
      />
      <div
        className="btn-list"
      >
        <button
          className="btn btn-primary"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Select
        </button>
      </div>
    </div>
    <p
      className="is-size-h4"
    >
      Modern
    </p>
  </div>
</div>
`;

exports[`Storyshots Text Area Basic 1`] = `null`;

exports[`Storyshots Text Area Disabled 1`] = `null`;

exports[`Storyshots Text Area Error 1`] = `null`;

exports[`Storyshots Text Area Information Message 1`] = `null`;

exports[`Storyshots Text Area Required 1`] = `null`;

exports[`Storyshots Text Area Scrollable 1`] = `null`;

exports[`Storyshots Text Area With Tooltip [skip] 1`] = `null`;

exports[`Storyshots Text Input Quad Input Standard 1`] = `
<div
  className="quad-input-wrap"
>
  <div
    className="input-text-wrap has-space-top has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-top"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-top"
      name="top"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder={undefined}
      step={1}
      type="number"
      value={1}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-right has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-right"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-right"
      name="right"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder={undefined}
      step={1}
      type="number"
      value={2}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-bottom has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-bottom"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-bottom"
      name="bottom"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder={undefined}
      step={1}
      type="number"
      value={3}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-left has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-left"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-left"
      name="left"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder={undefined}
      step={1}
      type="number"
      value={4}
    />
    
    
  </div>
</div>
`;

exports[`Storyshots Text Input Quad Input with All Placeholders 1`] = `
<div
  className="quad-input-wrap"
>
  <div
    className="input-text-wrap has-space-top has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-top"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-top"
      name="top"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="10"
      step={1}
      type="number"
      value={1}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-right has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-right"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-right"
      name="right"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="0"
      step={1}
      type="number"
      value={2}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-bottom has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-bottom"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-bottom"
      name="bottom"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="10"
      step={1}
      type="number"
      value={3}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-left has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-left"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-left"
      name="left"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="0"
      step={1}
      type="number"
      value={4}
    />
    
    
  </div>
</div>
`;

exports[`Storyshots Text Input Quad Input with Some Placeholders 1`] = `
<div
  className="quad-input-wrap"
>
  <div
    className="input-text-wrap has-space-top has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-top"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-top"
      name="top"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder=""
      step={1}
      type="number"
      value={1}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-right has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-right"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-right"
      name="right"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder=""
      step={1}
      type="number"
      value={2}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-bottom has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-bottom"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-bottom"
      name="bottom"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="10"
      step={1}
      type="number"
      value={3}
    />
    
    
  </div>
  <div
    className="input-text-wrap has-space-left has-units has-value"
    data-units="px"
    style={Object {}}
  >
    <label
      className="input-text-label"
      htmlFor="quad-input-left"
    >
      
    </label>
    <input
      aria-describedby=""
      id="quad-input-left"
      name="left"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="0"
      step={1}
      type="number"
      value={4}
    />
    
    
  </div>
</div>
`;

exports[`Storyshots Text Input Stateless Text Input with No Value Passed In 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name="simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots Text Input Stateless Text Input with a Component Passed as Info prop 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name="simple"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    <a
      href="#"
    >
      Test Info Link
    </a>
  </span>
  
</div>
`;

exports[`Storyshots Text Input Stateless Text Input with a Value Passed as a Prop 1`] = `
<div
  className="input-text-wrap has-value"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Stateless Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value="Passed-In Value"
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input Is Disabled 1`] = `
<div
  className="input-text-wrap is-disabled"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input Large 1`] = `
<div
  className="input-text-wrap is-large"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Large Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input Simple 1`] = `
<div
  className="input-text-wrap is-required"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Test Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input Simple with a value 1`] = `
<div
  className="input-text-wrap has-value is-required"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    Test Input
  </label>
  <input
    aria-describedby=""
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value="omg wuuuut"
  />
  
  
</div>
`;

exports[`Storyshots Text Input Text Input With Error 1`] = `
<div
  className="input-text-wrap is-error"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  <span
    className="input-info danger"
    id="test-input-simple-info"
  >
    This test input is wrong somehow.
  </span>
  
</div>
`;

exports[`Storyshots Text Input Text Input With Icon & Units (px) 1`] = `
<div
  className="row"
>
  <div
    className="col-1"
  >
    <div
      className="input-text-wrap has-space-left has-units"
      data-units="px"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-input-simple"
      >
        
      </label>
      <input
        aria-describedby=""
        id="test-input-simple"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={1}
        type="number"
        value=""
      />
      
      
    </div>
  </div>
</div>
`;

exports[`Storyshots Text Input Text Input With Info 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    An Input
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={null}
    type="text"
    value=""
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This test input is better then your test input.
  </span>
  
</div>
`;

exports[`Storyshots Text Input Text Input With Numbers 1`] = `
<div
  className="input-text-wrap"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-simple"
  >
    A Number
  </label>
  <input
    aria-describedby="test-input-simple-info"
    id="test-input-simple"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    step={1}
    type="number"
    value=""
  />
  <span
    className="input-info"
    id="test-input-simple-info"
  >
    This input always returns a number, not a string.
  </span>
  
</div>
`;

exports[`Storyshots Text Input Text Input With Units (%) 1`] = `
<div
  className="row"
>
  <div
    className="col-1"
  >
    <div
      className="input-text-wrap has-units"
      data-units="%"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-input-simple"
      >
        
      </label>
      <input
        aria-describedby=""
        id="test-input-simple"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={1}
        type="number"
        value=""
      />
      
      
    </div>
  </div>
</div>
`;

exports[`Storyshots Text Input Text Input With Units (px) 1`] = `
<div
  className="row"
>
  <div
    className="col-1"
  >
    <div
      className="input-text-wrap has-units"
      data-units="px"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="test-input-simple"
      >
        
      </label>
      <input
        aria-describedby=""
        id="test-input-simple"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={1}
        type="number"
        value=""
      />
      
      
    </div>
  </div>
</div>
`;

exports[`Storyshots Text Input Text Input with Placeholder 1`] = `
<div
  className="input-text-wrap has-units"
  data-units="px"
  style={Object {}}
>
  <label
    className="input-text-label"
    htmlFor="test-input-placeholder"
  >
    
  </label>
  <input
    aria-describedby=""
    id="test-input-placeholder"
    name={undefined}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    placeholder="10"
    step={1}
    type="number"
    value=""
  />
  
  
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons 1`] = `
<div
  className="btn-group"
  style={undefined}
>
  <button
    className="btn btn-group-item"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Week
  </button>
  <button
    className="btn btn-group-item"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Month
  </button>
</div>
`;

exports[`Storyshots ToggleButtons Toggle Buttons with an Explicit Active Option 1`] = `
<div
  className="btn-group"
  style={undefined}
>
  <button
    className="btn btn-group-item"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Day
  </button>
  <button
    className="btn btn-group-item"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Week
  </button>
  <button
    className="btn btn-group-item is-active"
    disabled={false}
    id={undefined}
    onClick={[Function]}
    type="button"
  >
    Month
  </button>
</div>
`;

exports[`Storyshots Tooltip HTML Content 1`] = `
<div
  style={
    Object {
      "margin": "0 auto",
      "maxWidth": "500px",
      "width": "100%",
    }
  }
>
  <h2>
    No Direction Specified
  </h2>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Label
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content"
            data-tooltip-length={undefined}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              The 
              <a
                href="#"
              >
                CCV number
              </a>
               is a 3 or 4 digit security code printed on the front or back of your card.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr />
  <h2>
    No Length Specified
  </h2>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Label
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content"
            data-tooltip-length={undefined}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              The 
              <a
                href="#"
              >
                CCV number
              </a>
               is a 3 or 4 digit security code printed on the front or back of your card.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr />
  <h2>
    Small Content
  </h2>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Left
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="small"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content is-left"
            data-tooltip-length="small"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              <a
                href="#"
              >
                Click
              </a>
              .
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Right
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="small"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content"
            data-tooltip-length="small"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              <a
                href="#"
              >
                Click
              </a>
              .
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr />
  <h2>
    Medium Content
  </h2>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Left
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="medium"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content is-left"
            data-tooltip-length="medium"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              This is a 
              <a
                href="#"
              >
                decent-sized
              </a>
               blurb.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Right
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="medium"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content"
            data-tooltip-length="medium"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              This is a 
              <a
                href="#"
              >
                decent-sized
              </a>
               blurb.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr />
  <h2>
    Large Content
  </h2>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Left
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="large"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content is-left"
            data-tooltip-length="large"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              Donec sed odio dui. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Etiam porta sem malesuada magna mollis euismod. 
              <a
                href="#"
              >
                Lorem
              </a>
               ipsum dolor sit amet, consectetur adipiscing elit.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="input-text-wrap"
  >
    <div
      className="input-text-wrap"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-example-ccv"
      >
        Right
      </label>
      <input
        aria-describedby=""
        id="input-text-example-ccv"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value=""
      />
      
      <div
        className="input-info-tooltip"
      >
        <div
          length="large"
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            className="tooltip-js-parent"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <i
              className="sg-icon sg-icon-info-circle"
              onClick={undefined}
              style={null}
            />
          </div>
          <div
            className="tooltip-js-content"
            data-tooltip-length="large"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            style={
              Object {
                "top": -3,
              }
            }
          >
            <p>
              Donec sed odio dui. Integer posuere erat a ante venenatis dapibus posuere velit aliquet. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Etiam porta sem malesuada magna mollis euismod. 
              <a
                href="#"
              >
                Lorem
              </a>
               ipsum dolor sit amet, consectetur adipiscing elit.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip Standard 1`] = `
<div
  style={
    Object {
      "margin": "0 auto",
      "maxWidth": "500px",
      "width": "100%",
    }
  }
>
  <h2>
    No Direction Specified
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="Hello."
      data-tooltip-length={undefined}
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    No Length Specified
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="Hello."
      data-tooltip-length={undefined}
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Right
    <span
      className={undefined}
      data-tooltip="Hello."
      data-tooltip-length={undefined}
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Down
    <span
      className={undefined}
      data-tooltip="Hello."
      data-tooltip-length={undefined}
      data-tooltip-pos="down"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Left
    <span
      className={undefined}
      data-tooltip="Hello."
      data-tooltip-length={undefined}
      data-tooltip-pos="left"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    Small Content
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="A blurb."
      data-tooltip-length="small"
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Right
    <span
      className={undefined}
      data-tooltip="A blurb."
      data-tooltip-length="small"
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Down
    <span
      className={undefined}
      data-tooltip="A blurb."
      data-tooltip-length="small"
      data-tooltip-pos="down"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Left
    <span
      className={undefined}
      data-tooltip="A blurb."
      data-tooltip-length="small"
      data-tooltip-pos="left"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    Medium Content
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
      data-tooltip-length="medium"
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Right
    <span
      className={undefined}
      data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
      data-tooltip-length="medium"
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Down
    <span
      className={undefined}
      data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
      data-tooltip-length="medium"
      data-tooltip-pos="down"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Left
    <span
      className={undefined}
      data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
      data-tooltip-length="medium"
      data-tooltip-pos="left"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    Large Content
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="large"
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Right
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="large"
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Down
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="large"
      data-tooltip-pos="down"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Left
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="large"
      data-tooltip-pos="left"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    X Large Content
  </h2>
  <h3>
    Up
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="xlarge"
      data-tooltip-pos="up"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Right
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="xlarge"
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Down
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="xlarge"
      data-tooltip-pos="down"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <h3>
    Left
    <span
      className={undefined}
      data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
      data-tooltip-length="xlarge"
      data-tooltip-pos="left"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
  <hr />
  <h2>
    Style Bleed
  </h2>
  <h3
    style={
      Object {
        "color": "rebeccapurple",
        "fontFamily": "Comic Sans MS",
        "fontSize": "2em",
        "letterSpacing": "5px",
        "textTransform": "uppercase",
      }
    }
  >
    Oh god why
    <span
      className={undefined}
      data-tooltip="This should not display any of the following styles set on the parent element: text-transform, letter-spacing, font-size, font-family, or color."
      data-tooltip-length="large"
      data-tooltip-pos="right"
    >
      <i
        className="sg-icon sg-icon-info-circle"
        onClick={undefined}
        style={null}
      />
    </span>
  </h3>
</div>
`;

exports[`Storyshots Tooltip Underline 1`] = `
<div
  style={
    Object {
      "margin": "0 auto",
      "maxWidth": "500px",
      "width": "100%",
    }
  }
>
  <h2>
    No Length Specified
  </h2>
  <span
    className="has-underline"
    data-tooltip="That means automatic teller machine."
    data-tooltip-length={undefined}
    data-tooltip-pos="right"
  >
    <span>
      Right
    </span>
  </span>
  <hr />
  <h2>
    No Direction Specified
  </h2>
  <span
    className="has-underline"
    data-tooltip="That means automatic teller machine."
    data-tooltip-length={undefined}
    data-tooltip-pos="up"
  >
    <span>
      Up
    </span>
  </span>
  <hr />
  <h2>
    Small Content
  </h2>
  <span
    className="has-underline"
    data-tooltip="A word."
    data-tooltip-length="small"
    data-tooltip-pos="up"
  >
    <span>
      Up
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="A word."
    data-tooltip-length="small"
    data-tooltip-pos="right"
  >
    <span>
      Right
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="A word."
    data-tooltip-length="small"
    data-tooltip-pos="down"
  >
    <span>
      Down
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="A word."
    data-tooltip-length="small"
    data-tooltip-pos="left"
  >
    <span>
      Left
    </span>
  </span>
  <hr />
  <h2>
    Medium Content
  </h2>
  <span
    className="has-underline"
    data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
    data-tooltip-length="medium"
    data-tooltip-pos="up"
  >
    <span>
      Up
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
    data-tooltip-length="medium"
    data-tooltip-pos="right"
  >
    <span>
      Right
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
    data-tooltip-length="medium"
    data-tooltip-pos="down"
  >
    <span>
      Down
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Nulla vitae elit libero, a pharetra augue. Integer posuere erat a ante venenatis dapibus posuere velit aliquet."
    data-tooltip-length="medium"
    data-tooltip-pos="left"
  >
    <span>
      Left
    </span>
  </span>
  <hr />
  <h2>
    Large Content
  </h2>
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="large"
    data-tooltip-pos="up"
  >
    <span>
      Up
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="large"
    data-tooltip-pos="right"
  >
    <span>
      Right
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="large"
    data-tooltip-pos="down"
  >
    <span>
      Down
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="large"
    data-tooltip-pos="left"
  >
    <span>
      Left
    </span>
  </span>
  <hr />
  <h2>
    X Large Content
  </h2>
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="xlarge"
    data-tooltip-pos="up"
  >
    <span>
      Up
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="xlarge"
    data-tooltip-pos="right"
  >
    <span>
      Right
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="xlarge"
    data-tooltip-pos="down"
  >
    <span>
      Down
    </span>
  </span>
   • 
  <span
    className="has-underline"
    data-tooltip="Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Donec id elit non mi porta gravida at eget metus. Cras mattis consectetur purus sit amet fermentum. Maecenas faucibus mollis interdum. Donec id elit non mi porta gravida at eget metus. Cras justo odio, dapibus ac facilisis in, egestas eget quam."
    data-tooltip-length="xlarge"
    data-tooltip-pos="left"
  >
    <span>
      Left
    </span>
  </span>
</div>
`;

exports[`Storyshots Truncated List Custom Render Props 1`] = `
<span
  className={undefined}
>
  <span>
    Boromir
     
    (Dead)
    ,
     
  </span>
  <span>
    Elrond
     
    ,
     
  </span>
  <span>
    Frodo
     
    ,
     
  </span>
  <a
    href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
  >
    and 
    2
     more…
  </a>
</span>
`;

exports[`Storyshots Truncated List Standard - Limit 2 - No Link - 1000 entries 1`] = `
<span
  className={undefined}
>
  0, 1
  <span>
    ,
     
    <abbr
      title="2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999"
    >
      +
      998
       more
    </abbr>
  </span>
</span>
`;

exports[`Storyshots Truncated List Standard - Limit 2 1`] = `
<span
  className={undefined}
>
  Boromir, Elrond
  <span>
    ,
     
    <abbr
      title="Frodo, Gimli, Legolas"
    >
      <a
        href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
      >
        +
        3
         more
      </a>
    </abbr>
  </span>
</span>
`;

exports[`Storyshots Truncated List Standard - Limit Default 1`] = `
<span
  className={undefined}
>
  Boromir, Elrond, Frodo
  <span>
    ,
     
    <abbr
      title="Gimli, Legolas"
    >
      <a
        href="http://lotr.wikia.com/wiki/Fellowship_of_the_Ring"
      >
        +
        2
         more
      </a>
    </abbr>
  </span>
</span>
`;

exports[`Storyshots Truncated List Standard - Only 1 Item 1`] = `
<span
  className={undefined}
>
  Boromir
</span>
`;

exports[`Storyshots Unsubscribe Groups Add Unsubscribe Group 1`] = `
<div
  id="unsubcribe-groups"
>
  <div
    className="unsubcribe-group-add-edit-panel"
  >
    <header
      className="content-header"
    >
      <ol
        className="breadcrumb"
      >
        <li>
          <a
            href="#"
          >
            Unsubscribe Groups
          </a>
        </li>
        <li />
      </ol>
      <h1>
        Add New Group
      </h1>
    </header>
    <p
      className="small"
    >
      <strong>
        Unsubscribe groups allow recipients to opt out of different types of campaigns you send.
      </strong>
    </p>
    <div
      className="input-text-wrap has-value is-required"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-group-name"
      >
        Group Name
      </label>
      <input
        aria-describedby="input-text-group-name-info"
        id="input-text-group-name"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value="Event Announcements"
      />
      <span
        className="input-info"
        id="input-text-group-name-info"
      >
        This will be displayed to your recipients when opting out.
      </span>
      
    </div>
    <div
      className="input-text-wrap has-value is-required"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-group-desc"
      >
        Group Description
      </label>
      <input
        aria-describedby="input-text-group-desc-info"
        id="input-text-group-desc"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value="Learn when we're coming to a city near you"
      />
      <span
        className="input-info"
        id="input-text-group-desc-info"
      >
        This will be displayed to your recipients when opting out.
      </span>
      
    </div>
    <div
      className="input-checkbox-wrap"
    >
      <div
        className="input-checkbox-wrap"
      >
        <input
          checked={undefined}
          disabled={undefined}
          id="checkbox-display-unsubscribe-group"
          onChange={[Function]}
          type="checkbox"
          value={undefined}
        />
        <label
          className="input-checkbox-label"
          htmlFor="checkbox-display-unsubscribe-group"
        >
          Display this group on your unsubscribe preferences page.
        </label>
      </div>
      <span
        className="unsubscribe-group-index-display-tooltip"
        data-tooltip="Clicking the Unsubscribe Preferences link will take
              recipients to a page that displays all unsubscribe groups
              you've chosen to include. You can preview this page at right
              by clicking the \\"Unsubscribe Preferences\\" tab"
        data-tooltip-length="large"
        data-tooltip-pos="up"
      >
        <i
          className="sg-icon sg-icon-info-circle"
          onClick={undefined}
          style={null}
        />
      </span>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Save Unsubscribe Group
      </button>
    </div>
  </div>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        Are you sure you want to delete this unsubscribe group?
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          <p
            className="small"
          >
            Warning: After deleting this group, recipients that unsubscribe from emails previously associated with this group will be globally unsubscribed because the group no longer exists.
          </p>
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-danger btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Delete
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Unsubscribe Groups Create New Group Card (disabled) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Create New Group
      </h2>
      <p>
        Create a new group that represents a common type of email you send.
      </p>
      <button
        className="btn btn-primary is-disabled"
        disabled={true}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Create New Group
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Unsubscribe Groups Create New Group Card 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Create New Group
      </h2>
      <p>
        Create a new group that represents a common type of email you send.
      </p>
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Create New Group
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Unsubscribe Groups Edit Unsubscribe Group 1`] = `
<div
  id="unsubcribe-groups"
>
  <div
    className="unsubcribe-group-add-edit-panel"
  >
    <header
      className="content-header"
    >
      <ol
        className="breadcrumb"
      >
        <li>
          <a
            href="#"
          >
            Unsubscribe Groups
          </a>
        </li>
        <li />
      </ol>
      <h1>
        Edit Group
      </h1>
    </header>
    <p
      className="small"
    >
      <strong>
        Unsubscribe groups allow recipients to opt out of different types of campaigns you send.
      </strong>
    </p>
    <div
      className="card is-inline is-thin"
    >
      <span
        className="small"
      >
        <strong>
          Unsubscribes 
        </strong>
        1000
      </span>
      <span
        className="small"
      >
        <strong>
          ID 
        </strong>
        1234
      </span>
    </div>
    <div
      className="input-text-wrap has-value is-required"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-group-name"
      >
        Group Name
      </label>
      <input
        aria-describedby="input-text-group-name-info"
        id="input-text-group-name"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value="Event Announcements"
      />
      <span
        className="input-info"
        id="input-text-group-name-info"
      >
        This will be displayed to your recipients when opting out.
      </span>
      
    </div>
    <div
      className="input-text-wrap has-value is-required"
      style={Object {}}
    >
      <label
        className="input-text-label"
        htmlFor="input-text-group-desc"
      >
        Group Description
      </label>
      <input
        aria-describedby="input-text-group-desc-info"
        id="input-text-group-desc"
        name={undefined}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        step={null}
        type="text"
        value="Learn when we're coming to a city near you"
      />
      <span
        className="input-info"
        id="input-text-group-desc-info"
      >
        This will be displayed to your recipients when opting out.
      </span>
      
    </div>
    <div
      className="input-checkbox-wrap"
    >
      <div
        className="input-checkbox-wrap"
      >
        <input
          checked={undefined}
          disabled={undefined}
          id="checkbox-display-unsubscribe-group"
          onChange={[Function]}
          type="checkbox"
          value={undefined}
        />
        <label
          className="input-checkbox-label"
          htmlFor="checkbox-display-unsubscribe-group"
        >
          Display this group on your unsubscribe preferences page.
        </label>
      </div>
      <span
        className="unsubscribe-group-index-display-tooltip"
        data-tooltip="Clicking the Unsubscribe Preferences link will take
              recipients to a page that displays all unsubscribe groups
              you've chosen to include. You can preview this page at right
              by clicking the \\"Unsubscribe Preferences\\" tab"
        data-tooltip-length="large"
        data-tooltip-pos="up"
      >
        <i
          className="sg-icon sg-icon-info-circle"
          onClick={undefined}
          style={null}
        />
      </span>
    </div>
    <div
      className="btn-list"
    >
      <button
        className="btn btn-danger"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Delete Group
      </button>
      <button
        className="btn btn-primary"
        disabled={false}
        id={undefined}
        onClick={[Function]}
        type="button"
      >
        Save Unsubscribe Group
      </button>
    </div>
  </div>
  <div
    className="sg-modal"
  >
    <div
      className="conf-alert sg-modal-content"
    >
      <h2
        className="conf-alert-header"
      >
        Are you sure you want to delete this unsubscribe group?
      </h2>
      <div
        className="conf-alert-body"
      >
        <p
          className="conf-alert-text"
        >
          <p
            className="small"
          >
            Warning: After deleting this group, recipients that unsubscribe from emails previously associated with this group will be globally unsubscribed because the group no longer exists.
          </p>
        </p>
      </div>
      <div
        className="conf-alert-actions"
      >
        <button
          className="btn btn-secondary btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn btn-danger btn-small"
          disabled={false}
          id={undefined}
          onClick={[Function]}
          type="button"
        >
          Delete
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Unsubscribe Groups Unsubscribe Group Card (isDisplayedOnPreferencesPage) 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Special Offers
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <p
        className="card-unsub-prefs"
      >
        <i
          className="sg-icon sg-icon-check-circle"
          onClick={undefined}
          style={null}
        />
        Included in opt out preferences
      </p>
      <p
        className="card-unsubs"
      >
        <strong>
          Unsubscribes
        </strong>
        0
      </p>
      <p
        className="card-id"
      >
        <strong>
          ID
        </strong>
         
        5678
      </p>
      <div
        className="actions"
      >
        <div
          className="btn-list"
        >
          <div
            className="btn btn-dropdown dropdown has-icon"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-ellipsis-vertical"
              onClick={undefined}
              style={null}
            />
            <ul
              className="dropdown-menu"
            >
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-pencil"
                  onClick={undefined}
                  style={null}
                />
                Edit
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-view"
                  onClick={undefined}
                  style={null}
                />
                Preview
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-export"
                  onClick={undefined}
                  style={null}
                />
                Upload a CSV
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-download"
                  onClick={undefined}
                  style={null}
                />
                Export
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-contacts-alt"
                  onClick={undefined}
                  style={null}
                />
                Manually Add
              </span>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Unsubscribe Groups Unsubscribe Group Card 1`] = `
<div
  className="row"
>
  <div
    className="col-4"
    style={
      Object {
        "width": "300px",
      }
    }
  >
    <div
      className="card is-centered"
    >
      <h2
        className=""
      >
        Special Offers
      </h2>
      <p>
        The easiest way to send email. It only requires modifying your application’s SMTP configuration.
      </p>
      <p
        className="card-unsubs"
      >
        <strong>
          Unsubscribes
        </strong>
        1000
      </p>
      <p
        className="card-id"
      >
        <strong>
          ID
        </strong>
         
        1234
      </p>
      <div
        className="actions"
      >
        <div
          className="btn-list"
        >
          <div
            className="btn btn-dropdown dropdown has-icon"
            onClick={[Function]}
          >
            <i
              className="sg-icon sg-icon-ellipsis-vertical"
              onClick={undefined}
              style={null}
            />
            <ul
              className="dropdown-menu"
            >
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-pencil"
                  onClick={undefined}
                  style={null}
                />
                Edit
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-view"
                  onClick={undefined}
                  style={null}
                />
                Preview
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-export"
                  onClick={undefined}
                  style={null}
                />
                Upload a CSV
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-download"
                  onClick={undefined}
                  style={null}
                />
                Export
              </span>
              <span
                className="dropdown-link"
                onClick={[Function]}
              >
                <i
                  className="sg-icon sg-icon-contacts-alt"
                  onClick={undefined}
                  style={null}
                />
                Manually Add
              </span>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Upload Progress Upload Progress 1`] = `
<section
  className="upload-progress undefined"
  style={
    Object {
      "alignItems": "center",
      "border": "1px solid #e9ecef",
      "borderRadius": "2px",
      "display": "flex",
      "flexDirection": "column",
      "fontSize": "16px",
      "justifyContent": "center",
      "padding": "60px 30px",
    }
  }
>
  <h2>
    We're uploading your CSV file
  </h2>
  <p>
    This may take a few moments, so please don't leave this page.
  </p>
  <div
    className="meter-bar"
  >
    <div
      className="meter-bar-fill"
      style={
        Object {
          "backgroundColor": "#1A82e2",
          "width": "67%",
        }
      }
    />
  </div>
</section>
`;
